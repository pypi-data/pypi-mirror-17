
# bdd_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1CB1785A1B10F764165D83C7E8D7C1BA'
    
_lr_action_items = {'RENAME':([0,7,13,22,23,24,25,26,27,28,29,32,35,36,52,54,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'NUMBER':([0,4,7,13,22,23,24,25,26,27,28,29,32,35,36,52,54,],[2,17,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'IMPLIES':([2,3,8,9,10,11,17,21,30,37,38,39,40,41,42,43,44,45,47,50,51,53,55,56,],[-3,-1,-23,-2,-5,26,-4,26,-6,-24,-7,-9,-12,-13,-10,-8,26,26,26,26,26,26,26,-14,]),'DIV':([8,15,],[-23,33,]),'TRUE':([0,7,13,22,23,24,25,26,27,28,29,32,35,36,52,54,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'MINUS':([0,2,3,7,8,9,10,11,13,17,21,22,23,24,25,26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,45,47,50,51,52,53,54,55,56,],[4,-3,-1,4,-23,-2,-5,25,4,-4,25,4,4,4,4,4,4,4,4,-6,4,4,4,-24,-7,-9,-12,-13,25,-8,25,25,25,25,25,4,25,4,25,-14,]),'RPAREN':([2,3,8,9,10,17,21,30,37,38,39,40,41,42,43,44,47,50,51,55,56,],[-3,-1,-23,-2,-5,-4,37,-6,-24,-7,-9,-12,-13,-10,-8,-11,-17,-16,-15,56,-14,]),'COLON':([8,14,16,18,19,20,46,48,49,],[-23,32,-19,-22,35,36,-18,-20,-21,]),'FORALL':([0,7,13,22,23,24,25,26,27,28,29,32,35,36,52,54,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'COMMA':([2,3,8,9,10,14,16,17,18,19,20,30,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,56,],[-3,-1,-23,-2,-5,31,-19,-4,-22,34,34,-6,-24,-7,-9,-12,-13,-10,-8,-11,52,-18,-17,-20,-21,-16,-15,54,-14,]),'$end':([2,3,8,9,10,11,17,30,37,38,39,40,41,42,43,44,47,50,51,56,],[-3,-1,-23,-2,-5,0,-4,-6,-24,-7,-9,-12,-13,-10,-8,-11,-17,-16,-15,-14,]),'XOR':([2,3,8,9,10,11,17,21,30,37,38,39,40,41,42,43,44,45,47,50,51,53,55,56,],[-3,-1,-23,-2,-5,23,-4,23,-6,-24,-7,-9,-12,23,23,-8,23,23,23,23,23,23,23,-14,]),'EXISTS':([0,7,13,22,23,24,25,26,27,28,29,32,35,36,52,54,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'EQUALS':([2,3,8,9,10,11,17,21,30,37,38,39,40,41,42,43,44,45,47,50,51,53,55,56,],[-3,-1,-23,-2,-5,24,-4,24,-6,-24,24,24,-12,24,24,24,24,24,24,24,24,24,24,-14,]),'LPAREN':([0,7,12,13,22,23,24,25,26,27,28,29,32,35,36,52,54,],[7,7,29,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'AND':([2,3,8,9,10,11,17,21,30,37,38,39,40,41,42,43,44,45,47,50,51,53,55,56,],[-3,-1,-23,-2,-5,22,-4,22,-6,-24,-7,22,-12,22,22,22,22,22,22,22,22,22,22,-14,]),'FALSE':([0,7,13,22,23,24,25,26,27,28,29,32,35,36,52,54,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'NAME':([0,1,5,6,7,13,22,23,24,25,26,27,28,29,31,32,33,34,35,36,52,54,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ITE':([0,7,13,22,23,24,25,26,27,28,29,32,35,36,52,54,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'NOT':([0,7,13,22,23,24,25,26,27,28,29,32,35,36,52,54,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'OR':([2,3,8,9,10,11,17,21,30,37,38,39,40,41,42,43,44,45,47,50,51,53,55,56,],[-3,-1,-23,-2,-5,27,-4,27,-6,-24,-7,27,-12,27,27,-8,27,27,27,27,27,27,27,-14,]),'EQUIV':([2,3,8,9,10,11,17,21,30,37,38,39,40,41,42,43,44,45,47,50,51,53,55,56,],[-3,-1,-23,-2,-5,28,-4,28,-6,-24,-7,-9,-12,-13,-10,-8,-11,28,28,28,28,28,28,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,7,13,22,23,24,25,26,27,28,29,32,35,36,52,54,],[11,21,30,38,39,40,41,42,43,44,45,47,50,51,53,55,]),'names':([5,6,],[19,20,]),'subs':([1,],[14,]),'name':([0,1,5,6,7,13,22,23,24,25,26,27,28,29,31,32,33,34,35,36,52,54,],[10,15,18,18,10,10,10,10,10,10,10,10,10,10,15,10,48,49,10,10,10,10,]),'sub':([1,31,],[16,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_bool','_parser.py',95),
  ('expr -> FALSE','expr',1,'p_bool','_parser.py',96),
  ('expr -> NUMBER','expr',1,'p_number','_parser.py',101),
  ('expr -> MINUS NUMBER','expr',2,'p_negative_number','_parser.py',105),
  ('expr -> name','expr',1,'p_var','_parser.py',110),
  ('expr -> NOT expr','expr',2,'p_unary','_parser.py',114),
  ('expr -> expr AND expr','expr',3,'p_binary','_parser.py',118),
  ('expr -> expr OR expr','expr',3,'p_binary','_parser.py',119),
  ('expr -> expr XOR expr','expr',3,'p_binary','_parser.py',120),
  ('expr -> expr IMPLIES expr','expr',3,'p_binary','_parser.py',121),
  ('expr -> expr EQUIV expr','expr',3,'p_binary','_parser.py',122),
  ('expr -> expr EQUALS expr','expr',3,'p_binary','_parser.py',123),
  ('expr -> expr MINUS expr','expr',3,'p_binary','_parser.py',124),
  ('expr -> ITE LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','_parser.py',129),
  ('expr -> EXISTS names COLON expr','expr',4,'p_quantifier','_parser.py',133),
  ('expr -> FORALL names COLON expr','expr',4,'p_quantifier','_parser.py',134),
  ('expr -> RENAME subs COLON expr','expr',4,'p_rename','_parser.py',139),
  ('subs -> subs COMMA sub','subs',3,'p_substitutions_iter','_parser.py',143),
  ('subs -> sub','subs',1,'p_substitutions_end','_parser.py',149),
  ('sub -> name DIV name','sub',3,'p_substitution','_parser.py',153),
  ('names -> names COMMA name','names',3,'p_names_iter','_parser.py',159),
  ('names -> name','names',1,'p_names_end','_parser.py',165),
  ('name -> NAME','name',1,'p_name','_parser.py',169),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','_parser.py',173),
]
