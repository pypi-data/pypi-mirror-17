Metadata-Version: 1.1
Name: chicken-turtle-project
Version: 2.3.0
Summary: Python 3 project development tools
Home-page: https://github.com/timdiels/chicken_turtle_project
Author: Tim Diels
Author-email: timdiels.m@gmail.com
License: LGPL3
Download-URL: https://github.com/timdiels/chicken_turtle_project/releases/v2.3.0.tar.gz
Description: Python 3 project development tools. Looks like a turtle, tastes like
        chicken.
        
        Chicken Turtle Project (CTP) provides CLI tools for developing Python 3
        projects. It makes it easier to make quality commits and releases,
        through automating what can be automated and by verifying manual work
        against quality requirements.
        
        Chicken Turtle Project is alpha. The interface may change in the future,
        but has gained some stability.
        
        Links
        =====
        
        -  `Documentation <http://pythonhosted.org/chicken_turtle_project/>`__
        -  `PyPI <https://pypi.python.org/pypi/chicken_turtle_project/>`__
        -  `GitHub <https://github.com/timdiels/chicken_turtle_project/>`__
        
        Changelist
        ==========
        
        v2.3.0
        ------
        
        -  Fixed:
        
           -  ct-mkvenv did not upgrade pip, wheel and setuptools
           -  git pre-commit hook did not enter venv properly when running tests
           -  added missing numpy requirement, an optional dependency of
              networkx
           -  \`requirements.in\`: dependencies on extra requires (e.g.
              ``dependency[extra]``) failed
        
        -  Optimised:
        
           -  ct-mkvenv reruns are faster
        
        -  Added or enhanced:
        
           -  when CT\_NO\_MKPROJECT environment variable is set, ct-mkproject
              will exit immediately when called.
           -  --debug option: more detailed messages on stdout.
           -  minimise changes in setup.py and requirements.txt (by sorting any
              lists)
        
        -  Changed:
        
           -  Terser and more readable messages on stdout
           -  Generate API using autosummary\_generate instead of sphinx-apidoc.
           -  if pip, wheel or setuptools is mentioned in a requirements.in
              file, it will also appear in requirements.txt, for the rare cases
              where you need to constrain one of them.
           -  ct-mkvenv: dependencies no longer installed in the order they are
              specified in requirements.txt
        
        -  Removed:
        
           -  ``ct-mkvenv --no-mkproject``: instead, use
              ``CT_NO_MKPROJECT=y ct-mkvenv``.
        
        v2.2.0
        ------
        
        -  Changed: user friendlier error messages
        -  Added:
        
           -  project.py::python\_version: allows specifying which Python
              version to use for the venv and testing
           -  ``ct-mkvenv --no-mkproject``: run without first calling
              ct-mkproject
        
        -  Fixed: the project's package was missing from venv after each commit.
           The venv wasn't restored properly after a pre-commit.
        
        v2.1.2
        ------
        
        -  Changed: expect tests in ``your_pkg.tests`` instead of
           ``your_pkg.test``
        -  Added:
        
           -  project.py::package\_name: allows package name and PyPI/index name
              to be different
           -  project.py::pre\_commit\_no\_ignore: files not to ignore in
              precommit checks, despite them not being tracked by git.
        
        v2.0.4
        ------
        
        No changelist
        
Keywords: development release setuptools tools
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
Classifier: Natural Language :: English
Classifier: Operating System :: POSIX
Classifier: Operating System :: POSIX :: AIX
Classifier: Operating System :: POSIX :: BSD
Classifier: Operating System :: POSIX :: BSD :: BSD/OS
Classifier: Operating System :: POSIX :: BSD :: FreeBSD
Classifier: Operating System :: POSIX :: BSD :: NetBSD
Classifier: Operating System :: POSIX :: BSD :: OpenBSD
Classifier: Operating System :: POSIX :: GNU Hurd
Classifier: Operating System :: POSIX :: HP-UX
Classifier: Operating System :: POSIX :: IRIX
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: POSIX :: Other
Classifier: Operating System :: POSIX :: SCO
Classifier: Operating System :: POSIX :: SunOS/Solaris
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: Implementation
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: Stackless
Classifier: Topic :: Software Development
