#!/usr/bin/env python
# coding: utf-8
"""Usage:
tues-provider-nagios [--host=<host>] [--socket=<socket>] [<service-expr>] [<host-expr>]

This provider requires the check_mk livestatus plugin

Options:
  <service-expr>                 A regluar expression matching the service description
  <host-expr>                    A regluar expression matching the host name
  --host=<host>                  The hostname of the nagios server
  --socket=<socket>              The path to the livestatus socket on the nagios server
"""

import os as _os
import subprocess as _sp

import docopt as _docopt


def hosts(host, socket, service_expr=None, host_expr=None):
    proc = _sp.Popen('ssh {0} "unixcat {1}"'.format(host, socket), shell=True, stdin=_sp.PIPE, stdout=_sp.PIPE)
    proc.stdin.write('GET services\nColumns: host_name\nFilter: state != 0\n')
    if service_expr is not None:
        proc.stdin.write('Filter: description ~~ {0}\n'.format(service_expr))

    if host_expr is not None:
        proc.stdin.write('Filter: host_name ~~ {0}\n'.format(host_expr))

    proc.stdin.close()
    try:
        return [_.strip() for _ in proc.stdout]
    finally:
        proc.terminate()


if __name__ == '__main__':
    args = _docopt.docopt(__doc__)
    nagios_host = args.get('--host') or _os.environ.get('NAGIOS_HOST', 'nagios')
    livestatus_socket = args.get('--socket') or _os.environ.get('NAGIOS_LIVESTATUS_SOCKET', '/var/lib/nagios3/rw/livestatus')

    print '\n'.join(hosts(nagios_host, livestatus_socket, args['<service-expr>'], args['<host-expr>']))
