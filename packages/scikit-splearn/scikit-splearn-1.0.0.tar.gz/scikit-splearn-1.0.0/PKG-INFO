Metadata-Version: 1.1
Name: scikit-splearn
Version: 1.0.0
Summary: Python module for spectral learning of weighted automata
Home-page: https://gitlab.lif.univ-mrs.fr/dominique.benielli/scikit-splearn.git
Author: François Denis and Rémi Eyraud and Denis Arrivault and Dominique Benielli
Author-email: francois.denis@lif.univ-mrs.fr remi.eyraud[A]lif.uni-mrs.fr.antispamdenis.arrivault@lif.univ-mrs.fr dominique.benielli@univ-amu.fr 
License: new BSD
Description: The **SCIKIT-SPLEARN** package is a  Python tool of the
        `Scikit-Spectral Learning (scikit-splearn)
        <http://splearning.sourceforge.net/>`_, scikit-splearn is a toolbox in
        python for spectral learning algorithms.
        
        scikit-splearn is a sckit compatible SP2Learning toolbox.
        scikit-splearn is a toolbox in python for spectral learning algorithms.
        These algorithms aim at learning Weighted Automata (WA) using what is
        named a Hankel matrix.
        The toolbow thus provides also a class for WA (with a bunch of usefull
         methods), another one for Hankel matrix, and a class for loading
         data and/or automata, and a class Sample that allows the storage of the
         data in a usefull dictionnary form. As WA are a generalisation of
         classical Probabilistic Automaton, everything works for these simpler
          models.
        The core of the learning algorithms is to compute a singular values
        decomposition of the Hankel matrix and then to construct the weighted
        automata from the elements of the decomposition. This is done in the
        class Learning.
        In its classic version, the rows of the Hankel matrix are prefixes while
        its columns are suffixes. Each cell contains then the probability of the
        sequence starting with the corresponding prefix and ending with the
        corresponding suffix. In the case of learning, the cells contain
        observed frequencies. scikit-splearn provides other versions, where each
        cell contains the probability that the corresponding sequence is prefix,
        a suffix, or a factor.
        Formally, the Hankel matrix is bi-infinite. Hence, in case of learning,
         one has to concentrate on a finite portion. The parameters lrows and
         lcolumn allows to specified which subsequences are taken into account
         as rows and columns of the finite matrix. If, instead of a list,
         an integer is provided, the finite matrix will have all rows and
         columns that correspond to subsequences up to these given lengths.
        The learning method requires also the information about the rank of
        the matrix. This rank corresponds to the number of states of a minimal
         WA computing the matrix (in case of learning, this is the estimated
         number of states of the target automaton). There is no easy way to
         evaluate the rank, a cross-validation approach is usually used to find
         the best possible value.
        
        Finally, splearn provides 2 ways to store the Hankel matrix:
        a classical one as an array, and a sparse version using scipy.sparse.
        
        
        
        The original scikit-splearn Toolbox is developed in Python at
        `LabEx Archimède <http://labex-archimede.univ-amu.fr/>`_, as a
        `LIF <http://www.lif.univ-mrs.fr/>`_ and I2M
        project, Aix-Marseille Université.
        
        This package, as well as the scikit-splearn toolbox, is Free software,
        released under  BSD License.
        
        The latest version of **scikit-splearn** can be downloaded
        from the following
        `PyPI page `pythonhosted site <http://pythonhosted.org/scikit-splearn/>`_.
        
        The documentation is available as a
        `pythonhosted site <http://pythonhosted.org/scikit-splearn/>`_.
        
        `gitlab project <https://gitlab.lif.univ-mrs.fr/dominique.benielli/scikit-splearn>`_,
         which provides the git repository managing the source code and where
         issues can be reported.
        
        
        
        .. :changelog:
        
        History
        =======
        
        1.0.0 (2016-06-30)
        ------------------
        First version
        
        
        .. -*- mode: rst -*-
        
        History
        -------
        
        People
        ------
        
        .. hlist::
        
          * François Denis
        
          * Rémi Eyraud
        
          * Denis Arrivault
        
          * Dominique Benielli
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
