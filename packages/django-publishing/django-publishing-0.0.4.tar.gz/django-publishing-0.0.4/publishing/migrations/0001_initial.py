# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-10-04 08:08
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PublishingCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_code', models.CharField(default='en', max_length=2, verbose_name='ISO 639-1 Code')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'verbose_name': 'Country',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='PublishingLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_code', models.CharField(default='en', max_length=2, verbose_name='ISO 639-1 Code')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
            ],
            options={
                'verbose_name_plural': 'Languages',
                'verbose_name': 'Language',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='PublishingProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Profiles',
                'verbose_name': 'Profile',
                'ordering': ('user',),
            },
        ),
        migrations.CreateModel(
            name='PublishingProfileRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('administrator', 'Administrator'), ('superuser', 'Superuser'), ('none', '-')], default='user', max_length=45, verbose_name='Role')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publishing.PublishingProfile', verbose_name='Profile')),
            ],
        ),
        migrations.CreateModel(
            name='PublishingRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('countries', models.ManyToManyField(to='publishing.PublishingCountry', verbose_name='Countries')),
                ('languages', models.ManyToManyField(to='publishing.PublishingLanguage', verbose_name='Languages')),
            ],
            options={
                'verbose_name_plural': 'Regions',
                'verbose_name': 'Region',
                'ordering': ('title',),
            },
        ),
        migrations.AddField(
            model_name='publishingprofileregion',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publishing.PublishingRegion', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='publishingprofile',
            name='regions',
            field=models.ManyToManyField(through='publishing.PublishingProfileRegion', to='publishing.PublishingRegion', verbose_name='Regions'),
        ),
        migrations.AddField(
            model_name='publishingprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Auth User'),
        ),
    ]
