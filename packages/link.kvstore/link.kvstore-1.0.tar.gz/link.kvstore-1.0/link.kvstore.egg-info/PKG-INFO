Metadata-Version: 1.1
Name: link.kvstore
Version: 1.0
Summary: Database agnostic key/value store API
Home-page: https://github.com/linkdd/link.kvstore
Author: David Delassus
Author-email: david.jose.delassus@gmail.com
License: MIT
Description: link.kvstore
        ============
        
        **link.kvstore** is a database agnostic key/value store API.
        
        See documentation_ for more informations.
        
        .. _documentation: https://linkkvstore.readthedocs.io
        
        .. image:: https://img.shields.io/pypi/l/link.kvstore.svg?style=flat-square
           :target: https://pypi.python.org/pypi/link.kvstore/
           :alt: License
        
        .. image:: https://img.shields.io/pypi/status/link.kvstore.svg?style=flat-square
           :target: https://pypi.python.org/pypi/link.kvstore/
           :alt: Development Status
        
        .. image:: https://img.shields.io/pypi/v/link.kvstore.svg?style=flat-square
           :target: https://pypi.python.org/pypi/link.kvstore/
           :alt: Latest release
        
        .. image:: https://img.shields.io/pypi/pyversions/link.kvstore.svg?style=flat-square
           :target: https://pypi.python.org/pypi/link.kvstore/
           :alt: Supported Python versions
        
        .. image:: https://img.shields.io/pypi/implementation/link.kvstore.svg?style=flat-square
           :target: https://pypi.python.org/pypi/link.kvstore/
           :alt: Supported Python implementations
        
        .. image:: https://img.shields.io/pypi/wheel/link.kvstore.svg?style=flat-square
           :target: https://pypi.python.org/pypi/link.kvstore
           :alt: Download format
        
        .. image:: https://travis-ci.org/linkdd/link.kvstore.svg?branch=master&style=flat-square
           :target: https://travis-ci.org/linkdd/link.kvstore
           :alt: Build status
        
        .. image:: https://coveralls.io/repos/github/linkdd/link.kvstore/badge.svg?style=flat-square
           :target: https://coveralls.io/r/linkdd/link.kvstore
           :alt: Code test coverage
        
        .. image:: https://img.shields.io/pypi/dm/link.kvstore.svg?style=flat-square
           :target: https://pypi.python.org/pypi/link.kvstore/
           :alt: Downloads
        
        .. image:: https://landscape.io/github/linkdd/link.kvstore/master/landscape.svg?style=flat-square
           :target: https://landscape.io/github/linkdd/link.kvstore/master
           :alt: Code Health
        
        Installation
        ------------
        
        .. code-block:: text
        
           pip install link.kvstore
        
        Features
        --------
        
         * database agnostic
         * dict API to access key/value store
        
        Examples
        --------
        
        Getting a backend:
        
        .. code-block:: python
        
           from link.middleware.core import Middleware
        
           # Instanciate a K/V store with Riak backend
           store = Middleware.get_middleware_by_uri(
               'kvstore+riak://localhost:8087/mybuckettype/mybucket?protocol=pbc'
           )
           # Instanciate a K/V store with SQL backend
           store = Middleware.get_middleware_by_uri(
               'kvstore+sql://localhost:5432/database/table'
           )
        
        Accessing data:
        
        .. code-block:: python
        
           store['foo'] = 'bar'
           assert store['foo'] == 'bar'
           assert 'foo' in store
        
           for key in store:
               print(key)
        
           del store['foo']
        
        Donating
        --------
        
        .. image:: https://liberapay.com/assets/widgets/donate.svg
           :target: https://liberapay.com/linkdd/donate
           :alt: Support via Liberapay
        
Keywords: link key value store
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Utilities
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: Implementation :: CPython
