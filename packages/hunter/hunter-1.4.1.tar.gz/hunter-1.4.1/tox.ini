; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    {py27,py33,py34,py35,pypy}-{pure,cython}-{cover,nocov},
    report,
    docs

[testenv]
basepython =
    pypy: {env:TOXPYTHON:pypy}
    py26: {env:TOXPYTHON:python2.6}
    {py27,docs,spell}: {env:TOXPYTHON:python2.7}
    py33: {env:TOXPYTHON:python3.3}
    py34: {env:TOXPYTHON:python3.4}
    py35: {env:TOXPYTHON:python3.5}
    {clean,check,cythonize,report,extension-coveralls,coveralls,codecov}: python3.5
    bootstrap: python
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    {docs,pure}: PUREPYTHONHUNTER=yes
passenv =
    *
deps =
    pytest
    pytest-travis-fold
    pytest-benchmark
    fields==5.0.0
    colorama==0.3.7
    six==1.10.0
    cover: pytest-cov
    cython: cython==0.24.1
commands =
    {py27,py33,py34,py35}: python tests/setup.py clean --all build_ext --force --inplace
    cython-cover: python setup.py clean --all build_ext --force --inplace
    nocov: {posargs:py.test -vv --ignore=src}
    cover: {posargs:py.test --cov --cov-report=term-missing -vv}
usedevelop = true

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coverage combine --append
    coverage report
    coveralls --merge=extension-coveralls.json []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage xml --ignore-errors
    codecov []


[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:py27-pure-nocov]
usedevelop = false

[testenv:py27-cython-nocov]
usedevelop = false

[testenv:py33-pure-nocov]
usedevelop = false

[testenv:py33-cython-nocov]
usedevelop = false

[testenv:py34-pure-nocov]
usedevelop = false

[testenv:py34-cython-nocov]
usedevelop = false

[testenv:py35-pure-nocov]
usedevelop = false

[testenv:py35-cython-nocov]
usedevelop = false

[testenv:pypy-pure-nocov]
usedevelop = false

[testenv:pypy-cython-nocov]
usedevelop = false
