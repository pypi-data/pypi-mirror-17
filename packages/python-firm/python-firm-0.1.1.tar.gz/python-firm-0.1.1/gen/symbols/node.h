ir_node *get_binop_left(const ir_node *node);
ir_node *get_binop_right(const ir_node *node);
int get_irn_arity(const ir_node *node);
ir_graph *get_irn_irg(const ir_node *node);
void *get_irn_link(const ir_node *node);
ir_mode *get_irn_mode(const ir_node *node);
ir_node *get_irn_n(const ir_node *node, int n);
long get_irn_node_nr(const ir_node *node);
ir_op *get_irn_op(const ir_node *node);
int get_irn_pinned(const ir_node *node);
ir_visited_t get_irn_visited(const ir_node *node);
ir_node *get_nodes_block(const ir_node *node);
int is_x_except_Proj(const ir_node *node);
int is_x_regular_Proj(const ir_node *node);
void keep_alive(ir_node *ka);
void set_binop_left(ir_node *node, ir_node *left);
void set_binop_right(ir_node *node, ir_node *right);
void set_irn_in(ir_node *node, int arity, ir_node *const in[]);
void set_irn_link(ir_node *node, void *link);
void set_irn_mode(ir_node *node, ir_mode *mode);
void set_irn_n(ir_node *node, int n, ir_node *in);
void set_irn_pinned(ir_node *node, int pinned);
void set_irn_visited(ir_node *node, ir_visited_t visited);
void set_nodes_block(ir_node *node, ir_node *block);
