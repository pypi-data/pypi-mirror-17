---
- name: Create dns directory
  file:
    path:  /home/{{ admin_user }}/services-cluster/dns/
    state: directory
    owner: "{{ admin_user }}"
    group: "{{ admin_group }}"

- name: Copy dns files
  template:
    src: dns/skydns-{{ item }}.yaml.j2
    dest: /home/{{ admin_user }}/services-cluster/dns/skydns-{{ item }}.yaml
    owner: "{{ admin_user }}"
    group: "{{ admin_group }}"
  with_items:
    - rc
    - svc

# Replication Controller
- name: Create dns replication controller if it does not currently exist
  command: kubectl create -f skydns-rc.yaml
  args:
    chdir: /home/{{ admin_user }}/services-cluster/dns
  failed_when: false
  register: kubectl
  changed_when: "'already exists' not in kubectl.stderr"

- name: Replace dns replication controller if it already exists
  command: kubectl replace -f skydns-rc.yaml
  args:
    chdir: /home/{{ admin_user }}/services-cluster/dns
  when: not kubectl.changed

# Service
- name: Create dns service if it does not currently exist
  command: kubectl create -f skydns-svc.yaml
  args:
    chdir: /home/{{ admin_user }}/services-cluster/dns
  failed_when: false
  register: kubectl
  changed_when: "'provided IP is already allocated' not in kubectl.stderr"

- name: Replace dns service if it already exists
  command: kubectl replace -f skydns-svc.yaml
  args:
    chdir: /home/{{ admin_user }}/services-cluster/dns
  register: kubectl
  when: not kubectl.changed

# A lot of subsequent services depend on DNS running.  So to give Docker a chance
# to download the images and get them running we have the following pause.
- pause:
    minutes: 2