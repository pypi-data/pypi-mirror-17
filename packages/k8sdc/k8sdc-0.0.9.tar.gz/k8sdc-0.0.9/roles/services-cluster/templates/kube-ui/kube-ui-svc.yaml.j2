apiVersion: v1
kind: Service
metadata:
  name: kube-ui
  namespace: kube-system
  labels:
    k8s-app: kube-ui
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "KubeUI"
    romulus/type: internal
  annotations:
    k8sdc: "true"
    romulus/host: '{{ kubernetes_kube_ui_fqdn }}'
    romulus/pathRegexp: '.*'
    romulus/frontendSettings: '{"FailoverPredicate":"(IsNetworkError() || ResponseCode() == 503) && Attempts() <= 2", "PassHostHeader": true, "TrustForwardHeader": true, "Hostname": "{{ kubernetes_kube_ui_fqdn }}"}'
    romulus/backendSettings: '{"KeepAlive": {"MaxIdleConnsPerHost": 128, "Period": "4s"}}'
spec:
  selector:
    k8s-app: kube-ui
  clusterIP:  {{ kubernetes_kube_ui_ip }}
  ports:
  - port: 80
    targetPort: 8080
