from telethon.tl.mtproto_request import MTProtoRequest


class UploadProfilePhotoRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    photos.uploadProfilePhoto#d50f9c88 file:InputFile caption:string geo_point:InputGeoPoint crop:InputPhotoCrop = photos.Photo"""

    def __init__(self, file, caption, geo_point, crop):
        """
        :param file: Telegram type: «InputFile».
        :param caption: Telegram type: «string».
        :param geo_point: Telegram type: «InputGeoPoint».
        :param crop: Telegram type: «InputPhotoCrop».
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default
        self.constructor_id = 0xd50f9c88

        self.file = file
        self.caption = caption
        self.geo_point = geo_point
        self.crop = crop

    def on_send(self, writer):
        writer.write_int(self.constructor_id, signed=False)
        self.file.on_send(writer)
        writer.tgwrite_string(self.caption)
        self.geo_point.on_send(writer)
        self.crop.on_send(writer)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'photos.uploadProfilePhoto#d50f9c88 file:InputFile caption:string geo_point:InputGeoPoint crop:InputPhotoCrop = photos.Photo'

    def __str__(self):
        return '(photos.uploadProfilePhoto (ID: 0xd50f9c88) = (file={}, caption={}, geo_point={}, crop={}))'.format(str(self.file), str(self.caption), str(self.geo_point), str(self.crop))
