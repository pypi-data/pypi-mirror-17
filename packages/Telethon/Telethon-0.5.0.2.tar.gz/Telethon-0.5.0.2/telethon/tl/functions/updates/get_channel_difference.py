from telethon.tl.mtproto_request import MTProtoRequest


class GetChannelDifferenceRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    updates.getChannelDifference#bb32d7c0 channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference"""

    def __init__(self, channel, filter, pts, limit):
        """
        :param channel: Telegram type: «InputChannel».
        :param filter: Telegram type: «ChannelMessagesFilter».
        :param pts: Telegram type: «int».
        :param limit: Telegram type: «int».
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default
        self.constructor_id = 0xbb32d7c0

        self.channel = channel
        self.filter = filter
        self.pts = pts
        self.limit = limit

    def on_send(self, writer):
        writer.write_int(self.constructor_id, signed=False)
        self.channel.on_send(writer)
        self.filter.on_send(writer)
        writer.write_int(self.pts)
        writer.write_int(self.limit)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'updates.getChannelDifference#bb32d7c0 channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference'

    def __str__(self):
        return '(updates.getChannelDifference (ID: 0xbb32d7c0) = (channel={}, filter={}, pts={}, limit={}))'.format(str(self.channel), str(self.filter), str(self.pts), str(self.limit))
