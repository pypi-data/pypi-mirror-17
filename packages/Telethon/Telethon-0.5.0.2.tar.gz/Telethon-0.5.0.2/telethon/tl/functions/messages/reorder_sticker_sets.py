from telethon.tl.mtproto_request import MTProtoRequest


class ReorderStickerSetsRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    messages.reorderStickerSets#9fcfbc30 order:Vector<long> = Bool"""

    def __init__(self, order):
        """
        :param order: Telegram type: «long». Must be a list.
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default
        self.constructor_id = 0x9fcfbc30

        self.order = order

    def on_send(self, writer):
        writer.write_int(self.constructor_id, signed=False)
        writer.write_int(0x1cb5c415, signed=False)  # Vector's constructor ID
        writer.write_int(len(self.order))
        for order_item in self.order:
            writer.write_long(order_item)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'messages.reorderStickerSets#9fcfbc30 order:Vector<long> = Bool'

    def __str__(self):
        return '(messages.reorderStickerSets (ID: 0x9fcfbc30) = (order={}))'.format(None if not self.order else [str(_) for _ in self.order])
