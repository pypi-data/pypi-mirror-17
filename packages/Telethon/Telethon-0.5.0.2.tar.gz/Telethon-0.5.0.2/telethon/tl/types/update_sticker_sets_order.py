from telethon.tl.mtproto_request import MTProtoRequest


class UpdateStickerSetsOrder(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    updateStickerSetsOrder#f0dfb451 order:Vector<long> = Update"""

    def __init__(self, order):
        """
        :param order: Telegram type: «long». Must be a list.
        """
        super().__init__()
        self.constructor_id = 0xf0dfb451

        self.order = order

    def on_send(self, writer):
        writer.write_int(self.constructor_id, signed=False)
        writer.write_int(0x1cb5c415, signed=False)  # Vector's constructor ID
        writer.write_int(len(self.order))
        for order_item in self.order:
            writer.write_long(order_item)

    def on_response(self, reader):
        reader.read_int()  # Vector's constructor ID
        self.order = []  # Initialize an empty list
        order_len = reader.read_int()
        for _ in range(order_len):
            order_item = reader.read_long()
            self.order.append(order_item)

    def __repr__(self):
        return 'updateStickerSetsOrder#f0dfb451 order:Vector<long> = Update'

    def __str__(self):
        return '(updateStickerSetsOrder (ID: 0xf0dfb451) = (order={}))'.format(None if not self.order else [str(_) for _ in self.order])
