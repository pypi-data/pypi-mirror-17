from telethon.tl.mtproto_request import MTProtoRequest


class SearchRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    contacts.search#11f812d8 q:string limit:int = contacts.Found"""

    def __init__(self, q, limit):
        """
        :param q: Telegram type: «string».
        :param limit: Telegram type: «int».
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default
        self.constructor_id = 0x11f812d8

        self.q = q
        self.limit = limit

    def on_send(self, writer):
        writer.write_int(self.constructor_id, signed=False)
        writer.tgwrite_string(self.q)
        writer.write_int(self.limit)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'contacts.search#11f812d8 q:string limit:int = contacts.Found'

    def __str__(self):
        return '(contacts.search (ID: 0x11f812d8) = (q={}, limit={}))'.format(str(self.q), str(self.limit))
