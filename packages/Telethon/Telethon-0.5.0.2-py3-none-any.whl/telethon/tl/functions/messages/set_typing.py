from telethon.tl.mtproto_request import MTProtoRequest


class SetTypingRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    messages.setTyping#a3825e50 peer:InputPeer action:SendMessageAction = Bool"""

    def __init__(self, peer, action):
        """
        :param peer: Telegram type: «InputPeer».
        :param action: Telegram type: «SendMessageAction».
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default
        self.constructor_id = 0xa3825e50

        self.peer = peer
        self.action = action

    def on_send(self, writer):
        writer.write_int(self.constructor_id, signed=False)
        self.peer.on_send(writer)
        self.action.on_send(writer)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'messages.setTyping#a3825e50 peer:InputPeer action:SendMessageAction = Bool'

    def __str__(self):
        return '(messages.setTyping (ID: 0xa3825e50) = (peer={}, action={}))'.format(str(self.peer), str(self.action))
