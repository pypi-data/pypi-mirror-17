from telethon.tl.mtproto_request import MTProtoRequest


class FileLocation(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    fileLocation#53d69076 dc_id:int volume_id:long local_id:int secret:long = FileLocation"""

    def __init__(self, dc_id, volume_id, local_id, secret):
        """
        :param dc_id: Telegram type: «int».
        :param volume_id: Telegram type: «long».
        :param local_id: Telegram type: «int».
        :param secret: Telegram type: «long».
        """
        super().__init__()
        self.constructor_id = 0x53d69076

        self.dc_id = dc_id
        self.volume_id = volume_id
        self.local_id = local_id
        self.secret = secret

    def on_send(self, writer):
        writer.write_int(self.constructor_id, signed=False)
        writer.write_int(self.dc_id)
        writer.write_long(self.volume_id)
        writer.write_int(self.local_id)
        writer.write_long(self.secret)

    def on_response(self, reader):
        self.dc_id = reader.read_int()
        self.volume_id = reader.read_long()
        self.local_id = reader.read_int()
        self.secret = reader.read_long()

    def __repr__(self):
        return 'fileLocation#53d69076 dc_id:int volume_id:long local_id:int secret:long = FileLocation'

    def __str__(self):
        return '(fileLocation (ID: 0x53d69076) = (dc_id={}, volume_id={}, local_id={}, secret={}))'.format(str(self.dc_id), str(self.volume_id), str(self.local_id), str(self.secret))
