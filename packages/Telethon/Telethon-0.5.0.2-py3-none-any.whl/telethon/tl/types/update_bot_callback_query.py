from telethon.tl.mtproto_request import MTProtoRequest


class UpdateBotCallbackQuery(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    updateBotCallbackQuery#a68c688c query_id:long user_id:int peer:Peer msg_id:int data:bytes = Update"""

    def __init__(self, query_id, user_id, peer, msg_id, data):
        """
        :param query_id: Telegram type: «long».
        :param user_id: Telegram type: «int».
        :param peer: Telegram type: «Peer».
        :param msg_id: Telegram type: «int».
        :param data: Telegram type: «bytes».
        """
        super().__init__()
        self.constructor_id = 0xa68c688c

        self.query_id = query_id
        self.user_id = user_id
        self.peer = peer
        self.msg_id = msg_id
        self.data = data

    def on_send(self, writer):
        writer.write_int(self.constructor_id, signed=False)
        writer.write_long(self.query_id)
        writer.write_int(self.user_id)
        self.peer.on_send(writer)
        writer.write_int(self.msg_id)
        writer.tgwrite_bytes(self.data)

    def on_response(self, reader):
        self.query_id = reader.read_long()
        self.user_id = reader.read_int()
        self.peer = reader.tgread_object()
        self.msg_id = reader.read_int()
        self.data = reader.tgread_bytes()

    def __repr__(self):
        return 'updateBotCallbackQuery#a68c688c query_id:long user_id:int peer:Peer msg_id:int data:bytes = Update'

    def __str__(self):
        return '(updateBotCallbackQuery (ID: 0xa68c688c) = (query_id={}, user_id={}, peer={}, msg_id={}, data={}))'.format(str(self.query_id), str(self.user_id), str(self.peer), str(self.msg_id), str(self.data))
