from telethon.tl.mtproto_request import MTProtoRequest


class InputPhotoCrop(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    inputPhotoCrop#d9915325 crop_left:double crop_top:double crop_width:double = InputPhotoCrop"""

    def __init__(self, crop_left, crop_top, crop_width):
        """
        :param crop_left: Telegram type: «double».
        :param crop_top: Telegram type: «double».
        :param crop_width: Telegram type: «double».
        """
        super().__init__()
        self.constructor_id = 0xd9915325

        self.crop_left = crop_left
        self.crop_top = crop_top
        self.crop_width = crop_width

    def on_send(self, writer):
        writer.write_int(self.constructor_id, signed=False)
        writer.write_double(self.crop_left)
        writer.write_double(self.crop_top)
        writer.write_double(self.crop_width)

    def on_response(self, reader):
        self.crop_left = reader.read_double()
        self.crop_top = reader.read_double()
        self.crop_width = reader.read_double()

    def __repr__(self):
        return 'inputPhotoCrop#d9915325 crop_left:double crop_top:double crop_width:double = InputPhotoCrop'

    def __str__(self):
        return '(inputPhotoCrop (ID: 0xd9915325) = (crop_left={}, crop_top={}, crop_width={}))'.format(str(self.crop_left), str(self.crop_top), str(self.crop_width))
