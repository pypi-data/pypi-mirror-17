heat_template_version: 2016-04-08

description: >
  Ceph External service.

parameters:
  CephClientKey:
    description: The Ceph client key. Can be created with ceph-authtool --gen-print-key. Currently only used for external Ceph deployments to create the openstack user keyring.
    type: string
    hidden: true
  CephClientUserName:
    default: openstack
    type: string
  CephClusterFSID:
    type: string
    description: The Ceph cluster FSID. Must be a UUID.
  CephExternalMonHost:
    default: ''
    type: string
    description: List of externally managed Ceph Mon Host IPs. Only used for external Ceph deployments.
  CinderRbdPoolName:
    default: volumes
    type: string
  CinderBackupRbdPoolName:
    default: backups
    type: string
  GlanceRbdPoolName:
    default: images
    type: string
  GnocchiRbdPoolName:
    default: metrics
    type: string
  NovaRbdPoolName:
    default: vms
    type: string
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  MonitoringSubscriptionCephExternal:
    default: 'overcloud-ceph-external'
    type: string

outputs:
  role_data:
    description: Role data for the Ceph External service.
    value:
      service_name: ceph_external
      monitoring_subscription: {get_param: MonitoringSubscriptionCephExternal}
      config_settings:
        tripleo::profile::base::ceph::ceph_mon_host: {get_param: CephExternalMonHost}
        ceph::profile::params::fsid: {get_param: CephClusterFSID}
        ceph::profile::params::client_keys:
          str_replace:
            template: "{
              client.CLIENT_USER: {
                secret: 'CLIENT_KEY',
                mode: '0644',
                cap_mon: 'allow r',
                cap_osd: 'allow class-read object_prefix rbd_children, allow rwx pool=CINDER_POOL, allow rwx pool=CINDERBACKUP_POOL, allow rwx pool=NOVA_POOL, allow rwx pool=GLANCE_POOL, allow rwx pool=GNOCCHI_POOL'
              }
            }"
            params:
              CLIENT_USER: {get_param: CephClientUserName}
              CLIENT_KEY: {get_param: CephClientKey}
              NOVA_POOL: {get_param: NovaRbdPoolName}
              CINDER_POOL: {get_param: CinderRbdPoolName}
              CINDERBACKUP_POOL: {get_param: CinderBackupRbdPoolName}
              GLANCE_POOL: {get_param: GlanceRbdPoolName}
              GNOCCHI_POOL: {get_param: GnocchiRbdPoolName}
      step_config: |
        include ::tripleo::profile::base::ceph::client
