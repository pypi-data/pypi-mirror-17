heat_template_version: 2016-04-08

description: >
  HAproxy service configured with Puppet

parameters:
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  HAProxyStatsPassword:
    description: Password for HAProxy stats endpoint
    hidden: true
    type: string
  HAProxyStatsUser:
    description: User for HAProxy stats endpoint
    default: admin
    type: string
  HAProxySyslogAddress:
    default: /dev/log
    description: Syslog address where HAproxy will send its log
    type: string
  RedisPassword:
    description: The password for Redis
    type: string
    hidden: true
  ControlVirtualInterface:
    default: 'br-ex'
    description: Interface where virtual ip will be assigned.
    type: string
  PublicVirtualInterface:
    default: 'br-ex'
    description: >
        Specifies the interface where the public-facing virtual ip will be assigned.
        This should be int_public when a VLAN is being used.
    type: string

outputs:
  role_data:
    description: Role data for the HAproxy role.
    value:
      service_name: haproxy
      config_settings:
        tripleo.haproxy.firewall_rules:
          '107 haproxy stats':
            dport: 1993
        # TODO(emilien) make it composable to find which services are actually running
        tripleo::haproxy::keystone_admin: '"%{hiera(\"keystone_enabled\")}"'
        tripleo::haproxy::keystone_public: '"%{hiera(\"keystone_enabled\")}"'
        tripleo::haproxy::neutron: '"%{hiera(\"neutron_api_enabled\")}"'
        tripleo::haproxy::cinder: '"%{hiera(\"cinder_api_enabled\")}"'
        tripleo::haproxy::glance_api: '"%{hiera(\"glance_api_enabled\")}"'
        tripleo::haproxy::glance_registry: '"%{hiera(\"glance_registry_enabled\")}"'
        tripleo::haproxy::nova_osapi: '"%{hiera(\"nova_api_enabled\")}"'
        tripleo::haproxy::nova_metadata: '"%{hiera(\"nova_api_enabled\")}"'
        tripleo::haproxy::nova_novncproxy: '"%{hiera(\"nova_vncproxy_enabled\")}"'
        tripleo::haproxy::mysql: true
        tripleo::haproxy::redis: '"%{hiera(\"redis_enabled\")}"'
        tripleo::haproxy::sahara: '"%{hiera(\"sahara_api_enabled\")}"'
        tripleo::haproxy::swift_proxy_server: '"%{hiera(\"swift_proxy_enabled\")}"'
        tripleo::haproxy::ceilometer: '"%{hiera(\"ceilometer_api_enabled\")}"'
        tripleo::haproxy::aodh: '"%{hiera(\"aodh_api_enabled\")}"'
        tripleo::haproxy::gnocchi: '"%{hiera(\"gnocchi_api_enabled\")}"'
        tripleo::haproxy::heat_api: '"%{hiera(\"heat_api_enabled\")}"'
        tripleo::haproxy::heat_cloudwatch: '"%{hiera(\"heat_api_cloudwatch_enabled\")}"'
        tripleo::haproxy::heat_cfn: '"%{hiera(\"heat_api_cfn_enabled\")}"'
        tripleo::haproxy::horizon: '"%{hiera(\"horizon_enabled\")}"'
        tripleo::haproxy::ironic: '"%{hiera(\"ironic_api_enabled\")}"'
        tripleo::haproxy::haproxy_log_address: {get_param: HAProxySyslogAddress}
        tripleo::haproxy::haproxy_stats_user: {get_param: HAProxyStatsUser}
        tripleo::haproxy::haproxy_stats_password: {get_param: HAProxyStatsPassword}
        tripleo::haproxy::redis_password: {get_param: RedisPassword}
        tripleo::haproxy::control_virtual_interface: {get_param: ControlVirtualInterface}
        tripleo::haproxy::public_virtual_interface: {get_param: PublicVirtualInterface}
      step_config: |
        include ::tripleo::profile::base::haproxy
