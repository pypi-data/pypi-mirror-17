Metadata-Version: 1.1
Name: djenerics
Version: 1.2.0
Summary: A collection of Django 1.5+ and Django Rest Framework 3.0+ utilities
Home-page: http://nrocco.github.io/
Author: Nico Di Rocco
Author-email: dirocco.nico@gmail.com
License: Copyright (c) 2013, Nico Di Rocco.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

Download-URL: http://github.com/nrocco/djenerics
Description: djenerics
        =========
        
          A collection of Django 1.5+ and Django Rest Framework 3.0+ utilities
        
        
        installation
        ------------
        
        You can use pip to install the package::
        
            $ pip install djenerics
        
        
        Then add it to the list of installed apps::
        
            INSTALLED_APPS = (
                'djenerics'
            )
        
        
        model mixins
        ------------
        
        The following mixins are available for your model classes:
        
        Timestampable
            Provides `created_at` and `updated_at` fields.
        
        Ownerable
            Provides a `owner` field which references `settings.AUTH_USER_MODEL`
        
        
        view mixins
        -----------
        
        The following mixins are available for your view classes:
        
        SelectRelatable
            Provides a class variable `select_related` that allows you to provide a
            tuple or list of related models to perform a select_related on.
        
        
        django-rest-framework filter backend
        ------------------------------------
        
        A custom filter backend that provides a generic filter query string parameter.
        
        Convert a search query into a dictionary.
        
        A search query like this one::
        
            party: stakker is akker category:"hiha hoi"
        
        Will be converted to a python dict::
        
            {
                'category': 'hiha hoi',
                'party': None,
                'search': 'stakker is akker'
            }
        
        It uses a regular expression to split every token on the `:`
        separator instead of using the string.split() function. This is
        important to distinguish between the following use cases::
        
            - 'party:'        => {'party': None}
            - 'party:tester'  => {'party': 'tester'}
            - 'party: tester' => {'search': 'party: tester'}
        
        
        django-rest-framework serializer mixins
        ---------------------------------------
        
        The following mixins are available for your serializer classes:
        
        Projectable
            Gives your api consumers the ability to control what fields are included in
            the api response using a configurable query string parameter (defaults to
            `_fields`).
        
            E.g. a `GET /resources?_fields=name,description,count` will only return the
            specified 3 fields of the `resource`.
        
        Ownerable
            Limit the related field options to only those records owned by the current
            logged in user.
        
Platform: UNKNOWN
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Software Development :: Libraries :: Python Modules
