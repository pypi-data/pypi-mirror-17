Metadata-Version: 2.0
Name: winston
Version: 0.1.0
Summary: A bit like PostGIS ST_SummaryStats for files on disk
Home-page: https://github.com/Maplecroft/Winston
Author: James Rutherford
Author-email: james.rutherford@maplecroft.com
License: MIT license
Keywords: winston
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Requires-Dist: click (==6.6)
Requires-Dist: numpy (==1.11.2)
Requires-Dist: rasterio (===0.36.0)
Requires-Dist: requests[security] (==2.4.3)
Requires-Dist: shapely (==1.5.17)
Requires-Dist: tablib (==0.11.2)

=======
Winston
=======

A bit like the PostGIS ``ST_SummaryStats`` function for rasters on your filesystem.
Mostly we're just stringing together some awesome libraries:

- `Rasterio`_
- `Shapely`_
- `Numpy`_
- `Tablib`_


Install
=======

Activate your project virtual environment, and then::

    pip install winston

If you just want to use the command-line features, you could::

    pip install --user winston


Usage
=====

On the command-line::

    winston --help

For example, to get stats for all WKTs in a text file for a given raster::

    winston some_file.tif -f wkts.txt

or just for one point, including raster metadata::

    winston /path/to/data/*.tif -w 'POINT (-4.483545 54.150744)' -m

Since we require ``rasterio``, you can also use the ``rio`` command-line tool to inspect your rasters::

    rio insp /path/to/geo.tif

Read more in the `Rasterio docs`_.

.. _`Rasterio`: https://mapbox.github.io/rasterio/
.. _`Shapely`: http://toblerity.org/shapely/manual.html
.. _`Numpy`: http://docs.scipy.org/doc/numpy/
.. _`Tablib`: http://docs.python-tablib.org/en/latest/
.. _`Rasterio docs`: https://mapbox.github.io/rasterio/

You can also use Winston as a module::

    >>> import rasterio
    >>> from winston.stats import summary
    >>> src = rasterio.open('/path/to/raster.tif')
    >>> print summary(src)
    [37324800.0, 37324800.0, 281865888.0, 7.552, 3.45, 0.0, 10.0]
    >>> print summary(src, bounds=(4, 6))
    [37324800.0, 1772928.0, 9023566.0, 5.09, 0.573, 4.122, 5.929]
    >>> print summary(src, bounds=(4, 6), mean_only=True)
    5.09


History

=======



0.1.0 (2016-10-12)

------------------



* First release on PyPI.


