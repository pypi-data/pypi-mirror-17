Metadata-Version: 2.0
Name: httpsrvvcr
Version: 0.1.9
Summary: VCR recording proxy-server for usage with httpsrv
Home-page: https://github.com/2gis/httpsrvvcr
Author: 2GIS
Author-email: a.nyrkov@2gis.ru
License: MIT
Keywords: api http mock testing vcr
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Testing
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Requires-Dist: tornado
Requires-Dist: pyyaml
Requires-Dist: httpsrv
Provides-Extra: test
Requires-Dist: requests; extra == 'test'

Httpsrv VCR
===========

Library for recording http requests into yaml format that can be
further understood by httpsrv_ as a server fixture

Installation
------------

Package can be obtained from PyPi

::

    pip install httpsrvvcr


Usage
-----

Basic usage looks like following::

    python -m httpsrvvcr.recorder 8080 http://some-api-url.com/api > tape.yaml


It is possible to skip headers recording with ``--no-headers`` flag::

    python -m httpsrvvcr.recorder 8080 http://some-api-url.com/api --no-headers > tape.yaml


Once can also exclude some request methods from output completely::

    python -m httpsrvvcr.recorder 8080 http://some-api-url.com/api --skip-methods OPTIONS TRACE > tape.yaml


After vcr tape is recorded one can use ``httpsrvvcr.player`` module::

    import unittest

    from httpsrv import Server
    from httpsrvvcr.player import Player

    server = Server(8080).start()
    player = Player(server)

    class MyTestCase(unittest.TestCase):
        def setUp(self):
            server.reset()

        @player.load('path/to/tape.yaml')
        def test_should_do_something(self):
            pass


.. _httpsrv: https://github.com/nyrkovalex/httpsrv


Documentation
-------------

http://httpsrvvcr.readthedocs.io


