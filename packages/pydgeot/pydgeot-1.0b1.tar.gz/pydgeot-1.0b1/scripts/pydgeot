#!/usr/bin/env python3
"""Pydgeot

Usage:
  pydgeot commands [-a PATH]
  pydgeot <command> [-a PATH] [<args>...]
  pydgeot -h | --help
  pydgeot --version

Options:
  -h, --help            Show this screen
  --version             Show version
  -a PATH, --app PATH   App directory [default: .]
"""

if __name__ == '__main__':
    import sys
    from docopt import docopt
    sys.path = sys.path[1:]
    from pydgeot import __version__, app, commands

    args = docopt(__doc__, version='Pydgeot {}'.format(__version__))
    if args['commands']:
        args['<command>'] = 'commands'

    commands.register_builtins()

    try:
        app_ = app.App(args['--app'])
    except app.AppError as e:
        print(e)
        app_ = None
    else:
        if not app_.is_valid:
            app_ = None

    command = commands.available.get(args['<command>'], None)

    if command is None:
        print('Command \'{}\' does not exist'.format(args['<command>']))
        exit(1)

    if app_ is None and not command.allow_appless:
        print('Command \'{}\' needs a valid App directory.'.format(args['<command>']))
        exit(1)

    try:
        command.run(app_, *args['<args>'])
    except (app.AppError, commands.CommandError) as e:
        print(e)
        exit(2)
    except KeyboardInterrupt:
        pass
