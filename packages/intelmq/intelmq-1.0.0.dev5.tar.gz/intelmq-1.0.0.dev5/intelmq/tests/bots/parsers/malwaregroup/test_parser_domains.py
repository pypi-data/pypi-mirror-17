# -*- coding: utf-8 -*-

import os
import unittest

import intelmq.lib.test as test
import intelmq.lib.utils as utils
from intelmq.bots.parsers.malwaregroup.parser_domains import \
    MalwareGroupDomainsParserBot

with open(os.path.join(os.path.dirname(__file__), 'domains.html')) as handle:
    EXAMPLE_FILE = handle.read()

EXAMPLE_REPORT = {"feed.name": "MalwareGroup",
                  "feed.url": "http://www.malwaregroup.com/domains",
                  "raw": utils.base64_encode(EXAMPLE_FILE),
                  "__type": "Report",
                  "time.observation": "2015-01-01T00:00:00+00:00",
                  }
EXAMPLE_EVENT = {"feed.name": "MalwareGroup",
                 "feed.url": "http://www.malwaregroup.com/domains",
                 "__type": "Event",
                 "time.source": "2015-01-01T00:00:00+00:00",
                 "source.fqdn": "example.com",
                 "source.ip": "192.0.2.1",
                 "classification.type": "malware",
                 "raw": "PHRkPkNPTTwvdGQ+IDx0ZD48YSBocmVmPSIvZG9tYWlucy9kZXRh"
                        "aWxzL2V4YW1wbGUuY29tIj5leGFtcGxlLmNvbTwvYT48L3RkPiA8"
                        "dGQ+PGEgaHJlZj0iaHR0cDovL3d3dy5teXdvdC5jb20vZW4vc2Nv"
                        "cmVjYXJkL2V4YW1wbGUuY29tIiBjbGFzcz0ibW9kYWxCb3giPjxp"
                        "bWcgc3JjPSIvaW1nL3JlZC1zaGllbGQucG5nIiBhbHQ9InJlZCIg"
                        "d2lkdGg9IjE2IiBoZWlnaHQ9IjE2IiAvPjwvYT48L3RkPiA8dGQ+"
                        "PGEgaHJlZj0iL2lwYWRkcmVzc2VzL2RldGFpbHMvMTkyLjAuMi4x"
                        "Ij4xOTIuMC4yLjE8L2E+PC90ZD4gPHRkPlhBPC90ZD4gPHRkPjQ1"
                        "PC90ZD4gPHRkPjIwMTQtMDEtMDE8L3RkPiA8dGQ+MjAxNS0wMS0w"
                        "MTwvdGQ+PC90cj4=",
                 "time.observation": "2015-01-01T00:00:00+00:00",
                 }


class TestMalwareGroupDomainsParserBot(test.BotTestCase, unittest.TestCase):
    """
    A TestCase for a MalwareGroupDomainsParserBot.
    """

    @classmethod
    def set_bot(cls):
        cls.bot_reference = MalwareGroupDomainsParserBot
        cls.default_input_message = EXAMPLE_REPORT

    def test_event(self):
        """ Test if correct Event has been produced. """
        self.run_bot()
        self.assertMessageEqual(0, EXAMPLE_EVENT)


if __name__ == '__main__':
    unittest.main()
