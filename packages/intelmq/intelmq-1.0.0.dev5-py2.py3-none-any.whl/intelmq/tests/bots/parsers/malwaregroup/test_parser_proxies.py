# -*- coding: utf-8 -*-

import os
import unittest

import intelmq.lib.test as test
import intelmq.lib.utils as utils
from intelmq.bots.parsers.malwaregroup.parser_proxies import \
    MalwareGroupProxiesParserBot

with open(os.path.join(os.path.dirname(__file__), 'proxies.html')) as handle:
    EXAMPLE_FILE = handle.read()

EXAMPLE_REPORT = {"feed.name": "MalwareGroup",
                  "feed.url": "http://www.malwaregroup.com/proxies",
                  "raw": utils.base64_encode(EXAMPLE_FILE),
                  "__type": "Report",
                  "time.observation": "2015-01-01T00:00:00+00:00",
                  }
EXAMPLE_EVENT = {"feed.name": "MalwareGroup",
                 "feed.url": "http://www.malwaregroup.com/proxies",
                 "__type": "Event",
                 "time.source": "2014-01-27T00:00:00+00:00",
                 "source.ip": "192.0.2.1",
                 "source.port": 81,
                 "classification.type": "unknown",
                 "event_description.text": "Malicious proxy",
                 "raw": "PHRkPjxhIGhyZWY9Ii9pcGFkZHJlc3Nlcy9kZXRhaWxzLzE5Mi4w"
                        "LjIuMSI+MTkyLjAuMi4xPC9hPjwvdGQ+IDx0ZD44MTwvdGQ+IDx0"
                        "ZD5YQTwvdGQ+IDx0ZD4tPC90ZD4gPHRkPjIwMTQtMDEtMjcgMDE6"
                        "MzM6MTA8L3RkPjwvdHI+",
                 "time.observation": "2015-01-01T00:00:00+00:00",
                 }


class TestMalwareGroupProxiesParserBot(test.BotTestCase, unittest.TestCase):
    """
    A TestCase for a MalwareGroupProxiesParserBot.
    """

    @classmethod
    def set_bot(cls):
        cls.bot_reference = MalwareGroupProxiesParserBot
        cls.default_input_message = EXAMPLE_REPORT

    def test_event(self):
        """ Test if correct Event has been produced. """
        self.run_bot()
        self.assertMessageEqual(0, EXAMPLE_EVENT)


if __name__ == '__main__':
    unittest.main()
