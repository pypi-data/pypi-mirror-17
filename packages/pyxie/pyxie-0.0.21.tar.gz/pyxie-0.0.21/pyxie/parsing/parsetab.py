
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '4B0AA1C4EB7FE06616A7D81374A112BF'
    
_lr_action_items = {'DEDENT':([1,3,4,5,6,7,8,9,11,14,15,16,17,18,20,21,22,23,24,26,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,45,46,47,49,52,53,54,56,62,66,71,72,75,76,77,79,80,82,83,84,85,86,88,89,93,95,96,99,100,102,103,104,110,111,112,],[-44,-50,-14,-64,-55,-7,-9,-5,-40,-49,-13,-61,-4,-8,-10,-2,-63,-11,-36,-12,-60,-56,-58,-32,-48,-59,-65,-51,-34,-57,-67,-31,-66,-15,-16,-39,-6,-62,-67,-17,-28,-47,-3,-68,-37,-46,-45,-53,-38,-54,-35,-69,-30,-33,-41,-42,-43,-29,-52,-18,-19,103,-20,-21,-22,-27,-26,-23,-24,-25,]),'ELIF':([95,103,111,],[98,-27,98,]),'IN':([59,],[78,]),'CHARACTER':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,57,60,62,64,65,66,67,68,69,71,72,73,75,76,77,78,79,80,82,83,84,85,86,88,89,92,93,95,98,99,100,102,103,104,110,111,112,],[5,-44,-50,-14,-64,-55,-7,-9,-5,5,-40,5,5,-49,-13,-61,-4,-8,-10,5,-63,-11,-36,5,-12,-60,-56,-58,-32,-48,-59,-65,-51,5,-34,-57,-67,-31,-66,-15,-16,5,-39,-6,-62,-67,5,5,-17,-28,-47,5,5,5,-68,5,5,-37,5,5,5,-46,-45,5,-53,-38,-54,5,-35,-69,-30,-33,-41,-42,-43,-29,-52,5,-18,-19,5,-20,-21,-22,-27,-26,-23,-24,-25,]),'NUMBER':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,57,60,62,64,65,66,67,68,69,71,72,73,75,76,77,78,79,80,82,83,84,85,86,88,89,92,93,95,98,99,100,102,103,104,110,111,112,],[29,-44,-50,-14,-64,-55,-7,-9,-5,29,-40,29,29,-49,-13,-61,-4,-8,-10,29,-63,-11,-36,29,-12,-60,-56,-58,-32,-48,-59,-65,-51,29,-34,-57,-67,-31,-66,-15,-16,29,-39,-6,-62,-67,29,29,-17,-28,-47,29,29,29,-68,29,29,-37,29,29,29,-46,-45,29,-53,-38,-54,29,-35,-69,-30,-33,-41,-42,-43,-29,-52,29,-18,-19,29,-20,-21,-22,-27,-26,-23,-24,-25,]),'EOL':([0,1,3,4,5,6,7,8,9,11,14,15,16,17,18,20,21,22,23,24,26,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,45,46,47,49,52,53,54,62,66,70,71,72,75,76,77,79,80,81,82,83,84,85,86,88,89,92,93,94,95,99,100,102,103,104,106,107,110,111,112,],[7,-44,-50,-14,-64,-55,-7,-9,-5,-40,-49,-13,-61,-4,-8,-10,7,-63,-11,-36,-12,-60,-56,-58,-32,-48,-59,-65,-51,-34,-57,-67,-31,-66,-15,-16,-39,-6,-62,-67,-17,-28,-47,-68,-37,87,-46,-45,-53,-38,-54,-35,-69,91,-30,-33,-41,-42,-43,-29,-52,7,-18,97,-19,-20,-21,-22,-27,-26,108,109,-23,-24,-25,]),'WHILE':([0,1,3,4,5,6,7,8,9,11,14,15,16,17,18,20,21,22,23,24,26,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,45,46,47,49,52,53,54,62,66,71,72,75,76,77,79,80,82,83,84,85,86,88,89,92,93,95,99,100,102,103,104,110,111,112,],[10,-44,-50,-14,-64,-55,-7,-9,-5,-40,-49,-13,-61,-4,-8,-10,10,-63,-11,-36,-12,-60,-56,-58,-32,-48,-59,-65,-51,-34,-57,-67,-31,-66,-15,-16,-39,-6,-62,-67,-17,-28,-47,-68,-37,-46,-45,-53,-38,-54,-35,-69,-30,-33,-41,-42,-43,-29,-52,10,-18,-19,-20,-21,-22,-27,-26,-23,-24,-25,]),'PRINT':([0,1,3,4,5,6,7,8,9,11,14,15,16,17,18,20,21,22,23,24,26,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,45,46,47,49,52,53,54,62,66,71,72,75,76,77,79,80,82,83,84,85,86,88,89,92,93,95,99,100,102,103,104,110,111,112,],[12,-44,-50,-14,-64,-55,-7,-9,-5,-40,-49,-13,-61,-4,-8,-10,12,-63,-11,-36,-12,-60,-56,-58,-32,-48,-59,-65,-51,-34,-57,-67,-31,-66,-15,-16,-39,-6,-62,-67,-17,-28,-47,-68,-37,-46,-45,-53,-38,-54,-35,-69,-30,-33,-41,-42,-43,-29,-52,12,-18,-19,-20,-21,-22,-27,-26,-23,-24,-25,]),'MINUS':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,57,60,62,64,65,66,67,68,69,71,72,73,75,76,77,78,79,80,82,83,84,85,86,88,89,92,93,95,98,99,100,102,103,104,110,111,112,],[13,-44,-50,-14,-64,-55,-7,-9,-5,13,-40,13,13,-49,-13,-61,-4,-8,-10,13,-63,-11,-36,13,-12,-60,-56,-58,-32,-48,-59,-65,-51,13,-34,-57,-67,-31,-66,-15,-16,13,68,-6,-62,-67,13,13,-17,-28,-47,13,13,13,-68,13,13,-37,13,13,13,-46,-45,13,-53,68,-54,13,-35,-69,-30,-33,-41,-42,-43,-29,-52,13,-18,-19,13,-20,-21,-22,-27,-26,-23,-24,-25,]),'DOT':([3,5,6,14,16,22,28,29,30,32,33,34,35,38,39,41,47,49,62,75,77,80,89,],[-50,-64,-55,-49,-61,-63,-60,-56,-58,61,-59,-65,-51,-57,-67,-66,-62,-67,-68,-53,-54,-69,-52,]),'DIVIDE':([1,3,5,6,11,14,16,22,28,29,30,32,33,34,35,38,39,41,47,49,54,62,71,72,75,77,80,84,85,86,89,],[-44,-50,-64,-55,50,-49,-61,-63,-60,-56,-58,-48,-59,-65,-51,-57,-67,-66,-62,-67,-47,-68,-46,-45,-53,-54,-69,50,50,50,-52,]),'POWER':([1,3,5,6,11,14,16,22,28,29,30,32,33,34,35,38,39,41,45,47,49,54,62,71,72,75,76,77,80,84,85,86,89,],[-44,-50,-64,-55,-40,-49,-61,-63,-60,-56,-58,-48,-59,-65,-51,-57,-67,-66,69,-62,-67,-47,-68,-46,-45,-53,69,-54,-69,-41,-42,-43,-52,]),'SIGNEDLONG':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,57,60,62,64,65,66,67,68,69,71,72,73,75,76,77,78,79,80,82,83,84,85,86,88,89,92,93,95,98,99,100,102,103,104,110,111,112,],[16,-44,-50,-14,-64,-55,-7,-9,-5,16,-40,16,16,-49,-13,-61,-4,-8,-10,16,-63,-11,-36,16,-12,-60,-56,-58,-32,-48,-59,-65,-51,16,-34,-57,-67,-31,-66,-15,-16,16,-39,-6,-62,-67,16,16,-17,-28,-47,16,16,16,-68,16,16,-37,16,16,16,-46,-45,16,-53,-38,-54,16,-35,-69,-30,-33,-41,-42,-43,-29,-52,16,-18,-19,16,-20,-21,-22,-27,-26,-23,-24,-25,]),'CONTINUE':([0,1,3,4,5,6,7,8,9,11,14,15,16,17,18,20,21,22,23,24,26,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,45,46,47,49,52,53,54,62,66,71,72,75,76,77,79,80,82,83,84,85,86,88,89,92,93,95,99,100,102,103,104,110,111,112,],[43,-44,-50,-14,-64,-55,-7,-9,-5,-40,-49,-13,-61,-4,-8,-10,43,-63,-11,-36,-12,-60,-56,-58,-32,-48,-59,-65,-51,-34,-57,-67,-31,-66,-15,-16,-39,-6,-62,-67,-17,-28,-47,-68,-37,-46,-45,-53,-38,-54,-35,-69,-30,-33,-41,-42,-43,-29,-52,43,-18,-19,-20,-21,-22,-27,-26,-23,-24,-25,]),'PLUS':([1,3,5,6,11,14,16,22,28,29,30,32,33,34,35,38,39,41,45,47,49,54,62,71,72,75,76,77,80,84,85,86,89,],[-44,-50,-64,-55,-40,-49,-61,-63,-60,-56,-58,-48,-59,-65,-51,-57,-67,-66,67,-62,-67,-47,-68,-46,-45,-53,67,-54,-69,-41,-42,-43,-52,]),'COLON':([1,3,5,6,11,14,16,22,24,28,29,30,31,32,33,34,35,37,38,40,41,45,47,48,49,54,62,63,66,71,72,75,76,77,79,80,83,84,85,86,89,90,101,105,],[-44,-50,-64,-55,-40,-49,-61,-63,-36,-60,-56,-58,-32,-48,-59,-65,-51,-34,-57,-31,-66,-39,-62,70,-67,-47,-68,81,-37,-46,-45,-53,-38,-54,-35,-69,-33,-41,-42,-43,-52,94,106,107,]),'IDENTIFIER':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,57,60,61,62,64,65,66,67,68,69,71,72,73,75,76,77,78,79,80,82,83,84,85,86,88,89,92,93,95,98,99,100,102,103,104,110,111,112,],[39,-44,-50,-14,-64,-55,-7,-9,-5,49,-40,49,49,-49,-13,-61,-4,-8,-10,39,-63,-11,-36,49,-12,59,-60,-56,-58,-32,-48,-59,-65,-51,49,-34,-57,-67,-31,-66,-15,-16,49,-39,-6,-62,-67,49,49,-17,-28,-47,49,49,49,80,-68,49,49,-37,49,49,49,-46,-45,49,-53,-38,-54,49,-35,-69,-30,-33,-41,-42,-43,-29,-52,39,-18,-19,49,-20,-21,-22,-27,-26,-23,-24,-25,]),'COMPARISON_OPERATOR':([1,3,5,6,11,14,16,22,24,28,29,30,32,33,34,35,38,39,41,45,47,49,54,62,71,72,75,76,77,80,84,85,86,89,],[-44,-50,-64,-55,-40,-49,-61,-63,57,-60,-56,-58,-48,-59,-65,-51,-57,-67,-66,-39,-62,-67,-47,-68,-46,-45,-53,-38,-54,-69,-41,-42,-43,-52,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'extended_if_clauses':([95,111,],[99,112,]),'statements':([0,21,92,],[2,56,96,]),'else_clause':([95,111,],[100,100,]),'bracketed_expression':([0,10,12,13,21,25,36,44,50,51,55,57,60,64,65,67,68,69,73,78,92,98,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expr_list':([12,55,73,],[52,74,88,]),'number':([0,10,12,13,21,25,36,44,50,51,55,57,60,64,65,67,68,69,73,78,92,98,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'statement_block':([87,91,97,108,109,],[93,95,104,110,111,]),'break_statement':([0,21,92,],[8,8,8,]),'arith_expression':([0,10,12,21,25,36,44,55,57,60,64,65,67,68,69,73,78,92,98,],[11,11,11,11,11,11,11,11,11,11,11,11,84,85,86,11,11,11,11,]),'print_statement':([0,21,92,],[9,9,9,]),'dotexpression':([32,],[62,]),'pass_statement':([0,21,92,],[15,15,15,]),'assignment_statement':([0,21,92,],[17,17,17,]),'while_statement':([0,21,92,],[18,18,18,]),'program':([0,],[19,]),'continue_statement':([0,21,92,],[20,20,20,]),'statement':([0,21,92,],[21,21,21,]),'if_statement':([0,21,92,],[23,23,23,]),'relational_expression':([0,10,12,21,25,36,44,55,60,64,65,73,78,92,98,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'for_statement':([0,21,92,],[26,26,26,]),'expression_atom':([0,10,12,13,21,25,36,44,50,51,55,57,60,64,65,67,68,69,73,78,92,98,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'boolean_and_expression':([0,10,12,21,25,36,55,64,65,73,78,92,98,],[31,31,31,31,31,31,31,31,83,31,31,31,31,]),'expression_molecule':([0,10,12,13,21,25,36,44,50,51,55,57,60,64,65,67,68,69,73,78,92,98,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'elif_clause':([95,111,],[102,102,]),'value_literal':([0,10,12,13,21,25,36,44,50,51,55,57,60,64,65,67,68,69,73,78,92,98,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'boolean_not_expression':([0,10,12,21,25,36,44,55,60,64,65,73,78,92,98,],[37,37,37,37,37,37,66,37,79,37,37,37,37,37,37,]),'general_expression':([0,10,12,21,25,36,55,64,73,78,92,98,],[46,48,53,46,58,63,53,82,53,90,46,105,]),'boolean_expression':([0,10,12,21,25,36,55,64,73,78,92,98,],[40,40,40,40,40,40,40,40,40,40,40,40,]),'identifiable':([0,10,12,13,21,25,36,44,50,51,55,57,60,64,65,67,68,69,73,78,92,98,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'negatable_expression_atom':([0,10,12,13,21,25,36,44,50,51,55,57,60,64,65,67,68,69,73,78,92,98,],[1,1,1,54,1,1,1,1,71,72,1,1,1,1,1,1,1,1,1,1,1,1,]),'expression':([0,10,12,21,25,36,44,55,57,60,64,65,73,78,92,98,],[45,45,45,45,45,45,45,45,76,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','grammar.py',38),
  ('statements -> statement','statements',1,'p_statements_1','grammar.py',42),
  ('statements -> statement statements','statements',2,'p_statements_2','grammar.py',46),
  ('statement -> assignment_statement','statement',1,'p_statement_1','grammar.py',50),
  ('statement -> print_statement','statement',1,'p_statement_2','grammar.py',54),
  ('statement -> general_expression','statement',1,'p_statement_3','grammar.py',58),
  ('statement -> EOL','statement',1,'p_statement_4_empty','grammar.py',62),
  ('statement -> while_statement','statement',1,'p_statement_5','grammar.py',66),
  ('statement -> break_statement','statement',1,'p_statement_6','grammar.py',70),
  ('statement -> continue_statement','statement',1,'p_statement_7','grammar.py',74),
  ('statement -> if_statement','statement',1,'p_statement_8','grammar.py',78),
  ('statement -> for_statement','statement',1,'p_statement_9','grammar.py',82),
  ('statement -> pass_statement','statement',1,'p_statement_10','grammar.py',86),
  ('pass_statement -> PASS','pass_statement',1,'p_pass_statement_1','grammar.py',90),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement_1','grammar.py',95),
  ('continue_statement -> CONTINUE','continue_statement',1,'p_continue_statement_1','grammar.py',99),
  ('print_statement -> PRINT expr_list','print_statement',2,'p_print_statement_1','grammar.py',103),
  ('while_statement -> WHILE general_expression COLON EOL statement_block','while_statement',5,'p_while_statement_1','grammar.py',108),
  ('if_statement -> IF general_expression COLON EOL statement_block','if_statement',5,'p_if_statement_1','grammar.py',121),
  ('if_statement -> IF general_expression COLON EOL statement_block extended_if_clauses','if_statement',6,'p_if_statement_2','grammar.py',135),
  ('extended_if_clauses -> else_clause','extended_if_clauses',1,'p_extended_if_clauses_1','grammar.py',149),
  ('extended_if_clauses -> elif_clause','extended_if_clauses',1,'p_extended_if_clauses_2','grammar.py',153),
  ('else_clause -> ELSE COLON EOL statement_block','else_clause',4,'p_else_clause_1','grammar.py',157),
  ('elif_clause -> ELIF general_expression COLON EOL statement_block','elif_clause',5,'p_elif_clause_1','grammar.py',162),
  ('elif_clause -> ELIF general_expression COLON EOL statement_block extended_if_clauses','elif_clause',6,'p_elif_clause_2','grammar.py',176),
  ('for_statement -> FOR IDENTIFIER IN general_expression COLON EOL statement_block','for_statement',7,'p_for_statement_1','grammar.py',191),
  ('statement_block -> INDENT statements DEDENT','statement_block',3,'p_block_1','grammar.py',198),
  ('expr_list -> general_expression','expr_list',1,'p_expr_list_1','grammar.py',206),
  ('expr_list -> general_expression COMMA expr_list','expr_list',3,'p_expr_list_2','grammar.py',210),
  ('assignment_statement -> IDENTIFIER ASSIGN general_expression','assignment_statement',3,'p_assignment_statement','grammar.py',215),
  ('general_expression -> boolean_expression','general_expression',1,'p_general_expression_1','grammar.py',221),
  ('boolean_expression -> boolean_and_expression','boolean_expression',1,'p_boolean_expression_1','grammar.py',225),
  ('boolean_expression -> boolean_expression OR boolean_and_expression','boolean_expression',3,'p_boolean_expression_2','grammar.py',229),
  ('boolean_and_expression -> boolean_not_expression','boolean_and_expression',1,'p_boolean_and_expression_1','grammar.py',243),
  ('boolean_and_expression -> boolean_and_expression AND boolean_not_expression','boolean_and_expression',3,'p_boolean_and_expression_2','grammar.py',247),
  ('boolean_not_expression -> relational_expression','boolean_not_expression',1,'p_boolean_not_expression_1','grammar.py',260),
  ('boolean_not_expression -> NOT boolean_not_expression','boolean_not_expression',2,'p_boolean_not_expression_2','grammar.py',264),
  ('relational_expression -> relational_expression COMPARISON_OPERATOR expression','relational_expression',3,'p_relational_expression_1','grammar.py',276),
  ('relational_expression -> expression','relational_expression',1,'p_relational_expression_2','grammar.py',280),
  ('expression -> arith_expression','expression',1,'p_expression_1','grammar.py',284),
  ('expression -> expression PLUS arith_expression','expression',3,'p_expression_2','grammar.py',288),
  ('expression -> expression MINUS arith_expression','expression',3,'p_expression_3','grammar.py',292),
  ('expression -> expression POWER arith_expression','expression',3,'p_expression_4','grammar.py',296),
  ('arith_expression -> negatable_expression_atom','arith_expression',1,'p_arith_expression_1','grammar.py',300),
  ('arith_expression -> arith_expression TIMES negatable_expression_atom','arith_expression',3,'p_arith_expression_2','grammar.py',304),
  ('arith_expression -> arith_expression DIVIDE negatable_expression_atom','arith_expression',3,'p_arith_expression_3','grammar.py',308),
  ('negatable_expression_atom -> MINUS negatable_expression_atom','negatable_expression_atom',2,'p_negatable_expression_atom_1','grammar.py',312),
  ('negatable_expression_atom -> expression_molecule','negatable_expression_atom',1,'p_negatable_expression_atom_2','grammar.py',316),
  ('expression_molecule -> expression_atom','expression_molecule',1,'p_expression_molecule_1','grammar.py',320),
  ('expression_molecule -> bracketed_expression','expression_molecule',1,'p_expression_molecule_2','grammar.py',324),
  ('expression_atom -> value_literal','expression_atom',1,'p_expression_atom_1','grammar.py',329),
  ('expression_atom -> expression_atom PARENL expr_list PARENR','expression_atom',4,'p_expression_atom_2','grammar.py',333),
  ('expression_atom -> expression_atom PARENL PARENR','expression_atom',3,'p_expression_atom_4','grammar.py',337),
  ('bracketed_expression -> PARENL general_expression PARENR','bracketed_expression',3,'p_expression_atom_5','grammar.py',341),
  ('value_literal -> number','value_literal',1,'p_value_literal_0','grammar.py',348),
  ('number -> NUMBER','number',1,'p_value_literal_1','grammar.py',352),
  ('number -> FLOAT','number',1,'p_value_literal_2','grammar.py',356),
  ('number -> HEX','number',1,'p_value_literal_3','grammar.py',360),
  ('number -> OCTAL','number',1,'p_value_literal_4','grammar.py',364),
  ('number -> BINARY','number',1,'p_value_literal_5','grammar.py',368),
  ('number -> SIGNEDLONG','number',1,'p_value_literal_5a','grammar.py',372),
  ('number -> UNSIGNEDLONG','number',1,'p_value_literal_5b','grammar.py',376),
  ('value_literal -> STRING','value_literal',1,'p_value_literal_6','grammar.py',381),
  ('value_literal -> CHARACTER','value_literal',1,'p_value_literal_6a','grammar.py',385),
  ('value_literal -> BOOLEAN','value_literal',1,'p_value_literal_7','grammar.py',389),
  ('value_literal -> identifiable','value_literal',1,'p_value_literal_8','grammar.py',393),
  ('identifiable -> IDENTIFIER','identifiable',1,'p_value_identifier_1','grammar.py',397),
  ('identifiable -> expression_molecule dotexpression','identifiable',2,'p_value_identifier_2','grammar.py',401),
  ('dotexpression -> DOT IDENTIFIER','dotexpression',2,'p_dotexpression_1','grammar.py',406),
]
