
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '9B2CE2EAE4A1096174CE57997BA6AED7'
    
_lr_action_items = {'DEDENT':([1,3,4,5,6,7,8,10,12,13,14,15,16,18,19,20,21,22,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,47,50,52,58,62,67,68,71,72,73,75,76,78,79,80,81,82,84,89,92,93,96,97,99,100,101,107,108,109,],[-42,-48,-13,-62,-53,-6,-8,-38,-47,-12,-59,-4,-7,-9,-2,-61,-10,-34,-11,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-65,-29,-64,-14,-15,-37,-5,-60,-65,-45,-3,-66,-35,-44,-43,-51,-36,-52,-33,-67,-28,-31,-39,-40,-41,-50,-16,-17,100,-18,-19,-20,-25,-24,-21,-22,-23,]),'ELIF':([92,100,108,],[95,-25,95,]),'IN':([55,],[74,]),'CHARACTER':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[5,-42,-48,-13,-62,-53,-6,-8,5,-38,5,-47,-12,-59,-4,-7,-9,5,-61,-10,-34,5,-11,-58,-54,-56,-30,-46,-57,-63,-49,5,-32,-55,-65,-29,-64,-14,-15,5,-37,-5,-60,-65,5,5,-45,5,5,5,-66,5,5,-35,5,5,5,-44,-43,-51,-36,-52,5,-33,-67,-28,-31,-39,-40,-41,-50,5,5,-16,-17,5,-18,-19,-20,-25,-24,-21,-22,-23,]),'NUMBER':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[27,-42,-48,-13,-62,-53,-6,-8,27,-38,27,-47,-12,-59,-4,-7,-9,27,-61,-10,-34,27,-11,-58,-54,-56,-30,-46,-57,-63,-49,27,-32,-55,-65,-29,-64,-14,-15,27,-37,-5,-60,-65,27,27,-45,27,27,27,-66,27,27,-35,27,27,27,-44,-43,-51,-36,-52,27,-33,-67,-28,-31,-39,-40,-41,-50,27,27,-16,-17,27,-18,-19,-20,-25,-24,-21,-22,-23,]),'EOL':([0,1,3,4,5,6,7,8,10,12,13,14,15,16,18,19,20,21,22,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,47,50,58,62,66,67,68,71,72,73,75,76,77,78,79,80,81,82,84,88,89,91,92,96,97,99,100,101,103,104,107,108,109,],[7,-42,-48,-13,-62,-53,-6,-8,-38,-47,-12,-59,-4,-7,-9,7,-61,-10,-34,-11,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-65,-29,-64,-14,-15,-37,-5,-60,-65,-45,-66,-35,83,-44,-43,-51,-36,-52,-33,-67,87,-28,-31,-39,-40,-41,-50,7,-16,94,-17,-18,-19,-20,-25,-24,105,106,-21,-22,-23,]),'WHILE':([0,1,3,4,5,6,7,8,10,12,13,14,15,16,18,19,20,21,22,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,47,50,58,62,67,68,71,72,73,75,76,78,79,80,81,82,84,88,89,92,96,97,99,100,101,107,108,109,],[9,-42,-48,-13,-62,-53,-6,-8,-38,-47,-12,-59,-4,-7,-9,9,-61,-10,-34,-11,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-65,-29,-64,-14,-15,-37,-5,-60,-65,-45,-66,-35,-44,-43,-51,-36,-52,-33,-67,-28,-31,-39,-40,-41,-50,9,-16,-17,-18,-19,-20,-25,-24,-21,-22,-23,]),'MINUS':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[11,-42,-48,-13,-62,-53,-6,-8,11,-38,11,-47,-12,-59,-4,-7,-9,11,-61,-10,-34,11,-11,-58,-54,-56,-30,-46,-57,-63,-49,11,-32,-55,-65,-29,-64,-14,-15,11,64,-5,-60,-65,11,11,-45,11,11,11,-66,11,11,-35,11,11,11,-44,-43,-51,64,-52,11,-33,-67,-28,-31,-39,-40,-41,-50,11,11,-16,-17,11,-18,-19,-20,-25,-24,-21,-22,-23,]),'DOT':([3,5,6,12,14,20,26,27,28,30,31,32,33,36,37,39,45,47,58,71,73,76,84,],[-48,-62,-53,-47,-59,-61,-58,-54,-56,57,-57,-63,-49,-55,-65,-64,-60,-65,-66,-51,-52,-67,-50,]),'DIVIDE':([1,3,5,6,10,12,14,20,26,27,28,30,31,32,33,36,37,39,45,47,50,58,67,68,71,73,76,80,81,82,84,],[-42,-48,-62,-53,48,-47,-59,-61,-58,-54,-56,-46,-57,-63,-49,-55,-65,-64,-60,-65,-45,-66,-44,-43,-51,-52,-67,48,48,48,-50,]),'POWER':([1,3,5,6,10,12,14,20,26,27,28,30,31,32,33,36,37,39,43,45,47,50,58,67,68,71,72,73,76,80,81,82,84,],[-42,-48,-62,-53,-38,-47,-59,-61,-58,-54,-56,-46,-57,-63,-49,-55,-65,-64,65,-60,-65,-45,-66,-44,-43,-51,65,-52,-67,-39,-40,-41,-50,]),'SIGNEDLONG':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[14,-42,-48,-13,-62,-53,-6,-8,14,-38,14,-47,-12,-59,-4,-7,-9,14,-61,-10,-34,14,-11,-58,-54,-56,-30,-46,-57,-63,-49,14,-32,-55,-65,-29,-64,-14,-15,14,-37,-5,-60,-65,14,14,-45,14,14,14,-66,14,14,-35,14,14,14,-44,-43,-51,-36,-52,14,-33,-67,-28,-31,-39,-40,-41,-50,14,14,-16,-17,14,-18,-19,-20,-25,-24,-21,-22,-23,]),'CONTINUE':([0,1,3,4,5,6,7,8,10,12,13,14,15,16,18,19,20,21,22,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,47,50,58,62,67,68,71,72,73,75,76,78,79,80,81,82,84,88,89,92,96,97,99,100,101,107,108,109,],[41,-42,-48,-13,-62,-53,-6,-8,-38,-47,-12,-59,-4,-7,-9,41,-61,-10,-34,-11,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-65,-29,-64,-14,-15,-37,-5,-60,-65,-45,-66,-35,-44,-43,-51,-36,-52,-33,-67,-28,-31,-39,-40,-41,-50,41,-16,-17,-18,-19,-20,-25,-24,-21,-22,-23,]),'PLUS':([1,3,5,6,10,12,14,20,26,27,28,30,31,32,33,36,37,39,43,45,47,50,58,67,68,71,72,73,76,80,81,82,84,],[-42,-48,-62,-53,-38,-47,-59,-61,-58,-54,-56,-46,-57,-63,-49,-55,-65,-64,63,-60,-65,-45,-66,-44,-43,-51,63,-52,-67,-39,-40,-41,-50,]),'COLON':([1,3,5,6,10,12,14,20,22,26,27,28,29,30,31,32,33,35,36,38,39,43,45,46,47,50,58,59,62,67,68,71,72,73,75,76,79,80,81,82,84,86,98,102,],[-42,-48,-62,-53,-38,-47,-59,-61,-34,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-29,-64,-37,-60,66,-65,-45,-66,77,-35,-44,-43,-51,-36,-52,-33,-67,-31,-39,-40,-41,-50,91,103,104,]),'IDENTIFIER':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,57,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[37,-42,-48,-13,-62,-53,-6,-8,47,-38,47,-47,-12,-59,-4,-7,-9,37,-61,-10,-34,47,-11,55,-58,-54,-56,-30,-46,-57,-63,-49,47,-32,-55,-65,-29,-64,-14,-15,47,-37,-5,-60,-65,47,47,-45,47,47,47,76,-66,47,47,-35,47,47,47,-44,-43,-51,-36,-52,47,-33,-67,-28,-31,-39,-40,-41,-50,47,37,-16,-17,47,-18,-19,-20,-25,-24,-21,-22,-23,]),'COMPARISON_OPERATOR':([1,3,5,6,10,12,14,20,22,26,27,28,30,31,32,33,36,37,39,43,45,47,50,58,67,68,71,72,73,76,80,81,82,84,],[-42,-48,-62,-53,-38,-47,-59,-61,53,-58,-54,-56,-46,-57,-63,-49,-55,-65,-64,-37,-60,-65,-45,-66,-44,-43,-51,-36,-52,-67,-39,-40,-41,-50,]),'$end':([1,2,3,4,5,6,7,8,10,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,47,50,52,58,62,67,68,71,72,73,75,76,78,79,80,81,82,84,89,92,96,97,99,100,101,107,108,109,],[-42,-1,-48,-13,-62,-53,-6,-8,-38,-47,-12,-59,-4,-7,0,-9,-2,-61,-10,-34,-11,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-65,-29,-64,-14,-15,-37,-5,-60,-65,-45,-3,-66,-35,-44,-43,-51,-36,-52,-33,-67,-28,-31,-39,-40,-41,-50,-16,-17,-18,-19,-20,-25,-24,-21,-22,-23,]),'PARENR':([1,3,5,6,10,12,14,20,22,26,27,28,29,30,31,32,33,35,36,38,39,43,45,47,50,51,54,58,62,67,68,69,70,71,72,73,75,76,79,80,81,82,84,90,],[-42,-48,-62,-53,-38,-47,-59,-61,-34,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-29,-64,-37,-60,-65,-45,71,73,-66,-35,-44,-43,84,-26,-51,-36,-52,-33,-67,-31,-39,-40,-41,-50,-27,]),'STRING':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[20,-42,-48,-13,-62,-53,-6,-8,20,-38,20,-47,-12,-59,-4,-7,-9,20,-61,-10,-34,20,-11,-58,-54,-56,-30,-46,-57,-63,-49,20,-32,-55,-65,-29,-64,-14,-15,20,-37,-5,-60,-65,20,20,-45,20,20,20,-66,20,20,-35,20,20,20,-44,-43,-51,-36,-52,20,-33,-67,-28,-31,-39,-40,-41,-50,20,20,-16,-17,20,-18,-19,-20,-25,-24,-21,-22,-23,]),'FOR':([0,1,3,4,5,6,7,8,10,12,13,14,15,16,18,19,20,21,22,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,47,50,58,62,67,68,71,72,73,75,76,78,79,80,81,82,84,88,89,92,96,97,99,100,101,107,108,109,],[25,-42,-48,-13,-62,-53,-6,-8,-38,-47,-12,-59,-4,-7,-9,25,-61,-10,-34,-11,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-65,-29,-64,-14,-15,-37,-5,-60,-65,-45,-66,-35,-44,-43,-51,-36,-52,-33,-67,-28,-31,-39,-40,-41,-50,25,-16,-17,-18,-19,-20,-25,-24,-21,-22,-23,]),'HEX':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[28,-42,-48,-13,-62,-53,-6,-8,28,-38,28,-47,-12,-59,-4,-7,-9,28,-61,-10,-34,28,-11,-58,-54,-56,-30,-46,-57,-63,-49,28,-32,-55,-65,-29,-64,-14,-15,28,-37,-5,-60,-65,28,28,-45,28,28,28,-66,28,28,-35,28,28,28,-44,-43,-51,-36,-52,28,-33,-67,-28,-31,-39,-40,-41,-50,28,28,-16,-17,28,-18,-19,-20,-25,-24,-21,-22,-23,]),'TIMES':([1,3,5,6,10,12,14,20,26,27,28,30,31,32,33,36,37,39,45,47,50,58,67,68,71,73,76,80,81,82,84,],[-42,-48,-62,-53,49,-47,-59,-61,-58,-54,-56,-46,-57,-63,-49,-55,-65,-64,-60,-65,-45,-66,-44,-43,-51,-52,-67,49,49,49,-50,]),'PASS':([0,1,3,4,5,6,7,8,10,12,13,14,15,16,18,19,20,21,22,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,47,50,58,62,67,68,71,72,73,75,76,78,79,80,81,82,84,88,89,92,96,97,99,100,101,107,108,109,],[4,-42,-48,-13,-62,-53,-6,-8,-38,-47,-12,-59,-4,-7,-9,4,-61,-10,-34,-11,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-65,-29,-64,-14,-15,-37,-5,-60,-65,-45,-66,-35,-44,-43,-51,-36,-52,-33,-67,-28,-31,-39,-40,-41,-50,4,-16,-17,-18,-19,-20,-25,-24,-21,-22,-23,]),'OCTAL':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[31,-42,-48,-13,-62,-53,-6,-8,31,-38,31,-47,-12,-59,-4,-7,-9,31,-61,-10,-34,31,-11,-58,-54,-56,-30,-46,-57,-63,-49,31,-32,-55,-65,-29,-64,-14,-15,31,-37,-5,-60,-65,31,31,-45,31,31,31,-66,31,31,-35,31,31,31,-44,-43,-51,-36,-52,31,-33,-67,-28,-31,-39,-40,-41,-50,31,31,-16,-17,31,-18,-19,-20,-25,-24,-21,-22,-23,]),'ELSE':([92,100,108,],[98,-25,98,]),'PARENL':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[23,-42,-48,-13,-62,-53,-6,-8,23,-38,23,51,-12,-59,-4,-7,-9,23,-61,-10,-34,23,-11,-58,-54,-56,-30,-46,-57,-63,-49,23,-32,-55,-65,-29,-64,-14,-15,23,-37,-5,-60,-65,23,23,-45,23,23,23,-66,23,23,-35,23,23,23,-44,-43,-51,-36,-52,23,-33,-67,-28,-31,-39,-40,-41,-50,23,23,-16,-17,23,-18,-19,-20,-25,-24,-21,-22,-23,]),'IF':([0,1,3,4,5,6,7,8,10,12,13,14,15,16,18,19,20,21,22,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,47,50,58,62,67,68,71,72,73,75,76,78,79,80,81,82,84,88,89,92,96,97,99,100,101,107,108,109,],[34,-42,-48,-13,-62,-53,-6,-8,-38,-47,-12,-59,-4,-7,-9,34,-61,-10,-34,-11,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-65,-29,-64,-14,-15,-37,-5,-60,-65,-45,-66,-35,-44,-43,-51,-36,-52,-33,-67,-28,-31,-39,-40,-41,-50,34,-16,-17,-18,-19,-20,-25,-24,-21,-22,-23,]),'AND':([1,3,5,6,10,12,14,20,22,26,27,28,29,30,31,32,33,35,36,37,39,43,45,47,50,58,62,67,68,71,72,73,75,76,79,80,81,82,84,],[-42,-48,-62,-53,-38,-47,-59,-61,-34,-58,-54,-56,56,-46,-57,-63,-49,-32,-55,-65,-64,-37,-60,-65,-45,-66,-35,-44,-43,-51,-36,-52,-33,-67,56,-39,-40,-41,-50,]),'BINARY':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[26,-42,-48,-13,-62,-53,-6,-8,26,-38,26,-47,-12,-59,-4,-7,-9,26,-61,-10,-34,26,-11,-58,-54,-56,-30,-46,-57,-63,-49,26,-32,-55,-65,-29,-64,-14,-15,26,-37,-5,-60,-65,26,26,-45,26,26,26,-66,26,26,-35,26,26,26,-44,-43,-51,-36,-52,26,-33,-67,-28,-31,-39,-40,-41,-50,26,26,-16,-17,26,-18,-19,-20,-25,-24,-21,-22,-23,]),'INDENT':([83,87,94,105,106,],[88,88,88,88,88,]),'FLOAT':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[36,-42,-48,-13,-62,-53,-6,-8,36,-38,36,-47,-12,-59,-4,-7,-9,36,-61,-10,-34,36,-11,-58,-54,-56,-30,-46,-57,-63,-49,36,-32,-55,-65,-29,-64,-14,-15,36,-37,-5,-60,-65,36,36,-45,36,36,36,-66,36,36,-35,36,36,36,-44,-43,-51,-36,-52,36,-33,-67,-28,-31,-39,-40,-41,-50,36,36,-16,-17,36,-18,-19,-20,-25,-24,-21,-22,-23,]),'ASSIGN':([37,],[60,]),'BREAK':([0,1,3,4,5,6,7,8,10,12,13,14,15,16,18,19,20,21,22,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,47,50,58,62,67,68,71,72,73,75,76,78,79,80,81,82,84,88,89,92,96,97,99,100,101,107,108,109,],[40,-42,-48,-13,-62,-53,-6,-8,-38,-47,-12,-59,-4,-7,-9,40,-61,-10,-34,-11,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-65,-29,-64,-14,-15,-37,-5,-60,-65,-45,-66,-35,-44,-43,-51,-36,-52,-33,-67,-28,-31,-39,-40,-41,-50,40,-16,-17,-18,-19,-20,-25,-24,-21,-22,-23,]),'BOOLEAN':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[32,-42,-48,-13,-62,-53,-6,-8,32,-38,32,-47,-12,-59,-4,-7,-9,32,-61,-10,-34,32,-11,-58,-54,-56,-30,-46,-57,-63,-49,32,-32,-55,-65,-29,-64,-14,-15,32,-37,-5,-60,-65,32,32,-45,32,32,32,-66,32,32,-35,32,32,32,-44,-43,-51,-36,-52,32,-33,-67,-28,-31,-39,-40,-41,-50,32,32,-16,-17,32,-18,-19,-20,-25,-24,-21,-22,-23,]),'NOT':([0,1,3,4,5,6,7,8,9,10,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,50,51,56,58,60,61,62,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[42,-42,-48,-13,-62,-53,-6,-8,42,-38,-47,-12,-59,-4,-7,-9,42,-61,-10,-34,42,-11,-58,-54,-56,-30,-46,-57,-63,-49,42,-32,-55,-65,-29,-64,-14,-15,42,-37,-5,-60,-65,-45,42,42,-66,42,42,-35,-44,-43,-51,-36,-52,42,-33,-67,-28,-31,-39,-40,-41,-50,42,42,-16,-17,42,-18,-19,-20,-25,-24,-21,-22,-23,]),'COMMA':([1,3,5,6,10,12,14,20,22,26,27,28,29,30,31,32,33,35,36,38,39,43,45,47,50,58,62,67,68,70,71,72,73,75,76,79,80,81,82,84,],[-42,-48,-62,-53,-38,-47,-59,-61,-34,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-29,-64,-37,-60,-65,-45,-66,-35,-44,-43,85,-51,-36,-52,-33,-67,-31,-39,-40,-41,-50,]),'OR':([1,3,5,6,10,12,14,20,22,26,27,28,29,30,31,32,33,35,36,37,38,39,43,45,47,50,58,62,67,68,71,72,73,75,76,79,80,81,82,84,],[-42,-48,-62,-53,-38,-47,-59,-61,-34,-58,-54,-56,-30,-46,-57,-63,-49,-32,-55,-65,61,-64,-37,-60,-65,-45,-66,-35,-44,-43,-51,-36,-52,-33,-67,-31,-39,-40,-41,-50,]),'UNSIGNEDLONG':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,56,58,60,61,62,63,64,65,67,68,71,72,73,74,75,76,78,79,80,81,82,84,85,88,89,92,95,96,97,99,100,101,107,108,109,],[45,-42,-48,-13,-62,-53,-6,-8,45,-38,45,-47,-12,-59,-4,-7,-9,45,-61,-10,-34,45,-11,-58,-54,-56,-30,-46,-57,-63,-49,45,-32,-55,-65,-29,-64,-14,-15,45,-37,-5,-60,-65,45,45,-45,45,45,45,-66,45,45,-35,45,45,45,-44,-43,-51,-36,-52,45,-33,-67,-28,-31,-39,-40,-41,-50,45,45,-16,-17,45,-18,-19,-20,-25,-24,-21,-22,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'extended_if_clauses':([92,108,],[96,109,]),'statements':([0,19,88,],[2,52,93,]),'else_clause':([92,108,],[97,97,]),'bracketed_expression':([0,9,11,19,23,34,42,48,49,51,53,56,60,61,63,64,65,74,85,88,95,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expr_list':([51,85,],[69,90,]),'number':([0,9,11,19,23,34,42,48,49,51,53,56,60,61,63,64,65,74,85,88,95,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'statement_block':([83,87,94,105,106,],[89,92,101,107,108,]),'break_statement':([0,19,88,],[8,8,8,]),'arith_expression':([0,9,19,23,34,42,51,53,56,60,61,63,64,65,74,85,88,95,],[10,10,10,10,10,10,10,10,10,10,10,80,81,82,10,10,10,10,]),'dotexpression':([30,],[58,]),'pass_statement':([0,19,88,],[13,13,13,]),'assignment_statement':([0,19,88,],[15,15,15,]),'while_statement':([0,19,88,],[16,16,16,]),'program':([0,],[17,]),'continue_statement':([0,19,88,],[18,18,18,]),'statement':([0,19,88,],[19,19,19,]),'if_statement':([0,19,88,],[21,21,21,]),'relational_expression':([0,9,19,23,34,42,51,56,60,61,74,85,88,95,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'for_statement':([0,19,88,],[24,24,24,]),'expression_atom':([0,9,11,19,23,34,42,48,49,51,53,56,60,61,63,64,65,74,85,88,95,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'boolean_and_expression':([0,9,19,23,34,51,60,61,74,85,88,95,],[29,29,29,29,29,29,29,79,29,29,29,29,]),'expression_molecule':([0,9,11,19,23,34,42,48,49,51,53,56,60,61,63,64,65,74,85,88,95,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'elif_clause':([92,108,],[99,99,]),'value_literal':([0,9,11,19,23,34,42,48,49,51,53,56,60,61,63,64,65,74,85,88,95,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'boolean_not_expression':([0,9,19,23,34,42,51,56,60,61,74,85,88,95,],[35,35,35,35,35,62,35,75,35,35,35,35,35,35,]),'general_expression':([0,9,19,23,34,51,60,74,85,88,95,],[44,46,44,54,59,70,78,86,70,44,102,]),'boolean_expression':([0,9,19,23,34,51,60,74,85,88,95,],[38,38,38,38,38,38,38,38,38,38,38,]),'identifiable':([0,9,11,19,23,34,42,48,49,51,53,56,60,61,63,64,65,74,85,88,95,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'negatable_expression_atom':([0,9,11,19,23,34,42,48,49,51,53,56,60,61,63,64,65,74,85,88,95,],[1,1,50,1,1,1,1,67,68,1,1,1,1,1,1,1,1,1,1,1,1,]),'expression':([0,9,19,23,34,42,51,53,56,60,61,74,85,88,95,],[43,43,43,43,43,43,43,72,43,43,43,43,43,43,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','grammar.py',38),
  ('statements -> statement','statements',1,'p_statements_1','grammar.py',42),
  ('statements -> statement statements','statements',2,'p_statements_2','grammar.py',46),
  ('statement -> assignment_statement','statement',1,'p_statement_1','grammar.py',50),
  ('statement -> general_expression','statement',1,'p_statement_3','grammar.py',54),
  ('statement -> EOL','statement',1,'p_statement_4_empty','grammar.py',58),
  ('statement -> while_statement','statement',1,'p_statement_5','grammar.py',62),
  ('statement -> break_statement','statement',1,'p_statement_6','grammar.py',66),
  ('statement -> continue_statement','statement',1,'p_statement_7','grammar.py',70),
  ('statement -> if_statement','statement',1,'p_statement_8','grammar.py',74),
  ('statement -> for_statement','statement',1,'p_statement_9','grammar.py',78),
  ('statement -> pass_statement','statement',1,'p_statement_10','grammar.py',82),
  ('pass_statement -> PASS','pass_statement',1,'p_pass_statement_1','grammar.py',86),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement_1','grammar.py',91),
  ('continue_statement -> CONTINUE','continue_statement',1,'p_continue_statement_1','grammar.py',95),
  ('while_statement -> WHILE general_expression COLON EOL statement_block','while_statement',5,'p_while_statement_1','grammar.py',111),
  ('if_statement -> IF general_expression COLON EOL statement_block','if_statement',5,'p_if_statement_1','grammar.py',124),
  ('if_statement -> IF general_expression COLON EOL statement_block extended_if_clauses','if_statement',6,'p_if_statement_2','grammar.py',138),
  ('extended_if_clauses -> else_clause','extended_if_clauses',1,'p_extended_if_clauses_1','grammar.py',152),
  ('extended_if_clauses -> elif_clause','extended_if_clauses',1,'p_extended_if_clauses_2','grammar.py',156),
  ('else_clause -> ELSE COLON EOL statement_block','else_clause',4,'p_else_clause_1','grammar.py',160),
  ('elif_clause -> ELIF general_expression COLON EOL statement_block','elif_clause',5,'p_elif_clause_1','grammar.py',165),
  ('elif_clause -> ELIF general_expression COLON EOL statement_block extended_if_clauses','elif_clause',6,'p_elif_clause_2','grammar.py',179),
  ('for_statement -> FOR IDENTIFIER IN general_expression COLON EOL statement_block','for_statement',7,'p_for_statement_1','grammar.py',194),
  ('statement_block -> INDENT statements DEDENT','statement_block',3,'p_block_1','grammar.py',201),
  ('expr_list -> general_expression','expr_list',1,'p_expr_list_1','grammar.py',209),
  ('expr_list -> general_expression COMMA expr_list','expr_list',3,'p_expr_list_2','grammar.py',213),
  ('assignment_statement -> IDENTIFIER ASSIGN general_expression','assignment_statement',3,'p_assignment_statement','grammar.py',218),
  ('general_expression -> boolean_expression','general_expression',1,'p_general_expression_1','grammar.py',224),
  ('boolean_expression -> boolean_and_expression','boolean_expression',1,'p_boolean_expression_1','grammar.py',228),
  ('boolean_expression -> boolean_expression OR boolean_and_expression','boolean_expression',3,'p_boolean_expression_2','grammar.py',232),
  ('boolean_and_expression -> boolean_not_expression','boolean_and_expression',1,'p_boolean_and_expression_1','grammar.py',246),
  ('boolean_and_expression -> boolean_and_expression AND boolean_not_expression','boolean_and_expression',3,'p_boolean_and_expression_2','grammar.py',250),
  ('boolean_not_expression -> relational_expression','boolean_not_expression',1,'p_boolean_not_expression_1','grammar.py',263),
  ('boolean_not_expression -> NOT boolean_not_expression','boolean_not_expression',2,'p_boolean_not_expression_2','grammar.py',267),
  ('relational_expression -> relational_expression COMPARISON_OPERATOR expression','relational_expression',3,'p_relational_expression_1','grammar.py',279),
  ('relational_expression -> expression','relational_expression',1,'p_relational_expression_2','grammar.py',283),
  ('expression -> arith_expression','expression',1,'p_expression_1','grammar.py',287),
  ('expression -> expression PLUS arith_expression','expression',3,'p_expression_2','grammar.py',291),
  ('expression -> expression MINUS arith_expression','expression',3,'p_expression_3','grammar.py',295),
  ('expression -> expression POWER arith_expression','expression',3,'p_expression_4','grammar.py',299),
  ('arith_expression -> negatable_expression_atom','arith_expression',1,'p_arith_expression_1','grammar.py',303),
  ('arith_expression -> arith_expression TIMES negatable_expression_atom','arith_expression',3,'p_arith_expression_2','grammar.py',307),
  ('arith_expression -> arith_expression DIVIDE negatable_expression_atom','arith_expression',3,'p_arith_expression_3','grammar.py',311),
  ('negatable_expression_atom -> MINUS negatable_expression_atom','negatable_expression_atom',2,'p_negatable_expression_atom_1','grammar.py',315),
  ('negatable_expression_atom -> expression_molecule','negatable_expression_atom',1,'p_negatable_expression_atom_2','grammar.py',319),
  ('expression_molecule -> expression_atom','expression_molecule',1,'p_expression_molecule_1','grammar.py',323),
  ('expression_molecule -> bracketed_expression','expression_molecule',1,'p_expression_molecule_2','grammar.py',327),
  ('expression_atom -> value_literal','expression_atom',1,'p_expression_atom_1','grammar.py',332),
  ('expression_atom -> expression_atom PARENL expr_list PARENR','expression_atom',4,'p_expression_atom_2','grammar.py',336),
  ('expression_atom -> expression_atom PARENL PARENR','expression_atom',3,'p_expression_atom_4','grammar.py',340),
  ('bracketed_expression -> PARENL general_expression PARENR','bracketed_expression',3,'p_expression_atom_5','grammar.py',344),
  ('value_literal -> number','value_literal',1,'p_value_literal_0','grammar.py',351),
  ('number -> NUMBER','number',1,'p_value_literal_1','grammar.py',355),
  ('number -> FLOAT','number',1,'p_value_literal_2','grammar.py',359),
  ('number -> HEX','number',1,'p_value_literal_3','grammar.py',363),
  ('number -> OCTAL','number',1,'p_value_literal_4','grammar.py',367),
  ('number -> BINARY','number',1,'p_value_literal_5','grammar.py',371),
  ('number -> SIGNEDLONG','number',1,'p_value_literal_5a','grammar.py',375),
  ('number -> UNSIGNEDLONG','number',1,'p_value_literal_5b','grammar.py',379),
  ('value_literal -> STRING','value_literal',1,'p_value_literal_6','grammar.py',384),
  ('value_literal -> CHARACTER','value_literal',1,'p_value_literal_6a','grammar.py',388),
  ('value_literal -> BOOLEAN','value_literal',1,'p_value_literal_7','grammar.py',392),
  ('value_literal -> identifiable','value_literal',1,'p_value_literal_8','grammar.py',396),
  ('identifiable -> IDENTIFIER','identifiable',1,'p_value_identifier_1','grammar.py',400),
  ('identifiable -> expression_molecule dotexpression','identifiable',2,'p_value_identifier_2','grammar.py',404),
  ('dotexpression -> DOT IDENTIFIER','dotexpression',2,'p_dotexpression_1','grammar.py',409),
]
