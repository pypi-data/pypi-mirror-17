Metadata-Version: 1.1
Name: korg
Version: 0.0.6
Summary: Fast logfile parsing. This is a port of Ruby logstash / grok to Python
Home-page: http://www.finklabs.org/
Author: Mark Fink
Author-email: mark@finklabs.de
License: MIT License
Description: 
        Why a logstash / grok port to Python?
        =====================================
        
        I am not much into Ruby but I like the logstash approach to logfile parsing. So I want to use this in Python.
        
        One solution would be to use the C version of logstash / grok (https://github.com/jordansissel/grok) and to write a wrapper:
        
        * https://github.com/kiwi0530/python-grok
        * https://github.com/emgee/libgrok-py
        
        Basically grok assembles regular expressions. I already know that in Python file processing with regular expressions is blazingly fast so I choose to port it to Python. Since a grok package already exists in Python for something completely different I had to reverse engineer it. Thus **the name korg**.
        
        
        Status
        ======
        
        * Base functionality is implemented including tests
        * Logstash patterns are included
        * Some grok features are still missing (not sure which ones are really necessary)
        
        I made some first benchmarks to verify whether my performance requirements can be realized with this approach. Please do not use this results in any blog posts or articles since this is not a complete benchmark (from a statistical view point the sample size is way too small).
        
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Operating System :: OS Independent
Classifier: Topic :: System :: Systems Administration
Classifier: Natural Language :: English
