# -*- coding: utf-8 -*-

class ObjectType(object):
  """
  Class representing an EDXML object type
  """

  def __init__(self, Name, DisplayName, Description = None, DataType ='string:0:cs:u', Enp = 0, Compress = False, FuzzyMatching ='none', Regexp ='[\s\S]*'):

    self._attr = {
      'name': Name,
      'display-name'   : DisplayName or ' '.join(('%s/%s' % (Name, Name)).split('-')),
      'description'    : Description or Name,
      'data-type'      : DataType,
      'enp'            : Enp,
      'compress'       : Compress,
      'fuzzy-matching' : FuzzyMatching,
      'regexp'         : Regexp
    }

  @classmethod
  def Create(cls, Name, DisplayNameSingular = None, DisplayNamePlural = None, Description = None, DataType ='string:0:cs:u'):
    """

    Creates and returns a new ObjectType instance. When no display
    names are specified, display names will be created from the
    object type name. If only a singular form is specified, the
    plural form will be auto-generated by appending an 's'.

    Args:
      Name (str): object type name
      DisplayNameSingular (str): display name (singular form)
      DisplayNamePlural (str): display name (plural form)
      Description (str): short description of the object type
      DataType (str): a valid EDXML data type

    Returns:
      ObjectType: The ObjectType instance
    """

    if DisplayNameSingular:
      DisplayName = '%s/%s' % (DisplayNameSingular, DisplayNamePlural if DisplayNamePlural else '%ss' % DisplayNameSingular)
    else:
      DisplayName = '/'
    return cls(Name, DisplayName, Description, DataType)

  def GetName(self):
    """

    Returns the name of the object type.

    Returns:
      str: The object type name
    """

    return self._attr['name']

  def GetDisplayNameSingular(self):
    """

    Returns the display name of the object type, in singular form.

    Returns:
      str:
    """

    return self._attr['display-name'].split('/')[0]

  def GetDisplayNamePlural(self):
    """

    Returns the display name of the object type, in plural form.

    Returns:
      str:
    """

    return self._attr['display-name'].split('/')[1]

  def GetDescription(self):
    """

    Returns the description of the object type.

    Returns:
      str:
    """

    return self._attr['description']

  def GetDataType(self):
    """

    Returns the data type of the object type.

    Returns:
      str:
    """

    return self._attr['data-type']

  def GetEntityNamingPriority(self):
    """

    Returns entity naming priority of the object type.

    Returns:
      int:
    """

    return self._attr['enp']

  def IsCompressible(self):
    """

    Returns True if compression is advised for the object type,
    returns False otherwise.

    Returns:
      bool:
    """

    return self._attr['compress']

  def GetFuzzyMatching(self):
    """

    Returns the EDXML fuzzy-matching attribute for the object type.

    Returns:
      str:
    """

    return self._attr['fuzzy-matching']

  def GetRegexp(self):
    """

    Returns the regular expression that object values must match.

    Returns:
      str:
    """

    return self._attr['regexp']

  def SetDescription(self, Description):
    """

    Sets the object type description

    Args:
      Description (str): Description

    Returns:
      EventSource: The ObjectType instance
    """

    self._attr['description'] = str(Description)
    return self

  def SetDataType(self, DataType):
    """

    Configure the data type.
    
    Args:
      DataType (DataType): DataType instance

    Returns:
      ObjectType: The ObjectType instance
    """
    self._attr['data-type'] = str(DataType)

    return self

  def SetDisplayName(self, Singular, Plural = None):
    """

    Configure the display name. If the plural form
    is omitted, it will be auto-generated by
    appending an 's' to the singular form.

    Args:
      Singular (str): display name (singular form)
      Plural (str): display name (plural form)

    Returns:
      ObjectType: The ObjectType instance
    """

    if Plural is None:
      Plural = '%ss' % Singular
    self._attr['display-name'] = '%s/%s' % (Singular, Plural)

    return self

  def SetEntityNamingPriority(self, Priority):
    """

    Configure the entity naming priority of
    the object type.

    Args:
      Priority (int): The EDXML priority attribute

    Returns:
      ObjectType: The ObjectType instance
    """
    self._attr['enp'] = int(Priority)

    return self

  def SetRegexp(self, Pattern):
    """

    Configure a regular expression that object
    values must match.

    Args:
      Pattern (str): Regular expression

    Returns:
      ObjectType: The ObjectType instance
    """
    self._attr['regexp'] = str(Pattern)

    return self


  def FuzzyMatchHead(self, Length):
    """

    Configure fuzzy matching on the head of the string
    (only for string data types).

    Args:
      Length (int): Number of characters to match

    Returns:
      ObjectType: The ObjectType instance
    """
    self._attr['fuzzy-matching'] = '[%d:]' % int(Length)

    return self

  def FuzzyMatchTail(self, Length):
    """

    Configure fuzzy matching on the tail of the string
    (only for string data types).

    Args:
      Length (int): Number of characters to match

    Returns:
      ObjectType: The ObjectType instance
    """
    self._attr['fuzzy-matching'] = '[:%d]' % int(Length)

    return self

  def FuzzyMatchSubstring(self, Pattern):
    """

    Configure fuzzy matching on a substring
    (only for string data types).

    Args:
      Pattern (str): Regular expression

    Returns:
      ObjectType: The ObjectType instance
    """
    self._attr['fuzzy-matching'] = 'substring:%s' % str(Pattern)

    return self

  def FuzzyMatchPhonetic(self):
    """

    Configure fuzzy matching on the sound
    of the string (phonetic fingerprinting).

    Returns:
      ObjectType: The ObjectType instance
    """
    self._attr['fuzzy-matching'] = 'phonetic'

    return self

  def Compress(self):
    """

    Enable compression for the object type.

    Returns:
      ObjectType: The ObjectType instance
    """
    self._attr['compress'] = True

    return self

  def Write(self, Writer):
    """

    Write the object type definition into the
    provided EDXMLWriter instance.

    Args:
      Writer (EDXMLWriter): An EDXMLWriter instance
    Returns:
      ObjectType: The ObjectType instance
    """

    Writer.AddObjectType(self._attr['name'], self._attr['description'],self._attr['data-type'],self._attr['fuzzy-matching'],self._attr['display-name'],self._attr['compress'],self._attr['enp'], self._attr['regexp'])

    return self
