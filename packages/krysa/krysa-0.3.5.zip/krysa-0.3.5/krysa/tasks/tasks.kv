<SingleTI@TextInput>:
    multiline: False
    input_filter: app.root.address_chars

<Task>:
    size_hint: 0.5, None
    pos_hint: {'center': [0.5, 0.5]}
    BoxLayout:
        id: taskbody
        orientation: 'vertical'
        Spinner:
            id: tablesel
            text: 'Choose data:'
            values: [child[0] for child in app.root.tables]
            size_hint_y: None
            height: dp(60)
            on_text:
                root.tablenum = root.get_table_pos(self.text, self.values)

        BoxLayout:
            id: container
            size_hint_y: None
            on_children: root.recalc_height(taskbody, self)

        BoxLayout:
            id: confirms
            size_hint_y: None
            height: dp(60)
            Button:
                text: 'Cancel'
                on_release: root.dismiss()

            Button:
                text: 'Run'
                disabled: True if tablesel.text == '' else False
                on_release: root.try_run()

<AddressLayout>:
    orientation: 'vertical'
    SingleTI:
        id: name

<SmallLargeLayout>:
    orientation: 'vertical'
    BoxLayout:
        Label:
            text: 'Address'

        SingleTI:
            id: name

    BoxLayout:
        Label:
            text: 'k ='

        SingleTI:
            id: order

    Label:
        text: 'Example: k=2 for the second smallest or largest value.'

<AvgsLayout>:
    orientation: 'vertical'
    BoxLayout:
        Label:
            text: 'Address'

        SingleTI:
            id: name

    BoxLayout:
        Label:
            text: 'p ='

        SingleTI:
            id: power
            input_filter: root.floatfilter

    Label:
        text: 'Example: p=0 for the geometric mean\\np=1 for the arithmetic.'

<FreqLayout>:
    size_hint_y: None
    height: dp(170)
    orientation: 'vertical'
    BoxLayout:
        Label:
            text: 'Address'

        SingleTI:
            id: name

        Label:
            text: 'Intervals'

        CheckBox:
            id: intervals

    BoxLayout:
        BoxLayout:
            BoxLayout:
                size_hint_x: None
                width: dp(80)
                Label:
                    text: 'Auto'

                CheckBox:
                    id: bins_auto
                    active: True
                    on_active: bins.disabled = True if self.active else False

            SingleTI:
                id: bins
                disabled: True
                hint_text: 'Number of bins'
                input_filter: 'int'

        BoxLayout:
            BoxLayout:
                orientation: 'vertical'
                size_hint_x: None
                width: dp(80)
                BoxLayout:
                    Label:
                        text: 'Auto'

                    CheckBox:
                        id: limits_auto
                        active: True
                        on_active:
                            lowlimit.disabled = True if self.active else False
                            uplimit.disabled = True if self.active else False

            BoxLayout:
                orientation: 'vertical'
                SingleTI:
                    id: lowlimit
                    disabled: True
                    hint_text: 'Lower limit (default = 0)'
                    input_filter: 'float'

                SingleTI:
                    id: uplimit
                    disabled: True
                    hint_text: 'Upper limit (default = max + 1)'
                    input_filter: 'float'

    BoxLayout:
        Label:
            text: 'Type:'

        BoxLayout:
            Label:
                text: 'absolute'

            CheckBox:
                id: absolute
                active: True

        BoxLayout:
            Label:
                text: 'relative'

            CheckBox:
                id: relative
                active: True

        BoxLayout:
            Label:
                text: 'cumulative'

            CheckBox:
                id: cumulative
                active: True

<SortLayout>:
    Spinner:
        id: sort_type
        text: 'Sort type'
        values: ['Ascending', 'Descending']
