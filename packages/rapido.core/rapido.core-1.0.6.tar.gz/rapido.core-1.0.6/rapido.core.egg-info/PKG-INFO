Metadata-Version: 1.1
Name: rapido.core
Version: 1.0.6
Summary: Rapid application builder
Home-page: https://github.com/collective/rapido.core
Author: Eric BREHAULT
Author-email: ebrehault@gmail.com
License: GPL
Description: rapido.core
        ===========
        
        .. image:: https://secure.travis-ci.org/collective/rapido.core.png?branch=master
            :target: http://travis-ci.org/collective/rapido.core
            :alt: Tests
        .. image:: https://landscape.io/github/collective/rapido.core/master/landscape.svg?style=flat
            :target: https://landscape.io/github/collective/rapido.core/master
            :alt: Code Health
        .. image:: https://coveralls.io/repos/collective/rapido.core/badge.svg?branch=master&service=github
            :target: https://coveralls.io/github/collective/rapido.core?branch=master
            :alt: Coverage
        
        rapido.core allows to run Rapido applications.
        
        rapido.core can run on Zope or Pyramid. The initial target is Plone (using
        `rapido.plone <https://github.com/collective/rapido.plone>`_), but a POC has been
        successfully implemented on Substance D.
        
        Database design
        ---------------
        
        A Rapido application can be built from Plone using rapido.plone or provided from
        sources (read from the local file system).
        
        Anyhow, at the end, the database design is just a set of YAML/HTML/Python files.
        
        The `rapido.plone documentation <http://rapidoplone.readthedocs.org/en/latest/>`_
        gives a good overview of Rapido features.
        
        Record storage
        ---------------
        
        Storage is not handled directly by rapido.core.
        
        By default, we use `rapido.souper <https://github.com/collective/rapido.souper>`_
        which allows to store records in a `soup <https://pypi.python.org/pypi/souper>`_.
        
        Using ZODB is not mandatory, different storages could be easily implemented
        (SQL-based storage, remote storage services, etc.).
        
        Changelog
        =========
        
        1.0.6 (2016-09-19)
        ------------------
        
        Breaking changes:
        
        - Use '/blocks/' in Rapido URLs (instead of '/block/')
        
        New features:
        
        - Allow regular GET and POST on elements (action elements make a redirect,
          other elements just return the result).
          [ebrehault]
        
        - ``on_display`` event
          [ebrehault]
        
        - Manager vew permissions on blocks
          [ebrehault]
        
        
        1.0.5 (2016-04-09)
        ------------------
        
        - Allow REST POST to element
          [simon-previdente]
        
        - Raise compilation and execution errors
          [ebrehault]
        
        - Support callable layout
          [ebrehault]
        
        - Allow safe modules (datetime, random, time)
          [ebrehault]
        
        
        1.0.4 (2016-03-02)
        ------------------
        
        - No rendering on basic element to allow {elem.attr} or {elem[item]} in templates
        
        - compute elements only once
        
        - Fixes
        
        
        1.0.3 (2016-01-06)
        ------------------
        
        - Allow redirection after action, save, or delete
          [ebrehault]
        
        - REST endpoint to compute a block element
          [ebrehault]
        
        
        1.0.2 (2015-11-17)
        ------------------
        
        - set_block() method
        - fix datetime
        - fix permissions
        
        
        1.0.1 (2015-11-08)
        ------------------
        
        - More pythonic access to record items
        
        
        1.0 (2015-11-07)
        ----------------
        
        - Initial release
        
Keywords: rapido
Platform: UNKNOWN
Classifier: Programming Language :: Python
