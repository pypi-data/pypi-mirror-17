__sequana__cutadapt = [":fwd", ":rev", ":m", ":q"]

from sequana import SequanaConfig
cfg = SequanaConfig(config)
cfgca = cfg.config.adapter_removal


prefix = "cutadapt/"

# TODO: should make these lines more robus (R1 hardcoded)
__cutadapt__output = [prefix + cfg.PROJECT +"_R1_.cutadapt.fastq.gz"]

if len(cfg.DATASET) == 2:
    __cutadapt__output += [prefix + cfg.PROJECT +"_R2_.cutadapt.fastq.gz"]


if cfg.config.bwa_phix.do:
    __cutadapt__input = __bwa_bam_to_fastq__output[:]
    __cutadapt__input = [x for x in __cutadapt__input if "unmapped" in x]
else:
    __cutadapt__input = cfg.DATASET[:]


if len(cfg.DATASET) == 2:
    rule cutadapt:
        input: 
            file1 = __cutadapt__input[0],
            file2 = __cutadapt__input[1]
        output:
            file1 = __cutadapt__output[0],
            file2 = __cutadapt__output[1],
        params:
            fwd= cfg.config.adapter_removal.fwd,
            rev= cfg.config.adapter_removal.rev,
            m= cfg.config.adapter_removal.m,   # cutoff
            quality= "%s" % (cfg.config.adapter_removal.quality),
            kwargs= cfgca.kwargs,
            mode1 = cfgca.mode,
            mode2 = cfgca.mode.upper()
        log: "logs/cutadapt.txt"
        run:
            executable = cfgca.tool # could be cutadapt or atropos
            cmd = "%s -o {output.file1} -p {output.file2}" % executable
            if cfgca.tool == "atropos":
                cmd += " -pe1 {input.file1} -pe2 {input.file2} --progress bar"
            else:
                cmd += " {input.file1} {input.file2} "
            if params.fwd:
                cmd += " -{params.mode1} {params.fwd} "
            if params.rev:
                cmd += " -{params.mode2} {params.rev} " 
            cmd += " -m {params.m} -q {params.quality} "
            cmd += " {params.kwargs} > {log}"
            shell(cmd)
else:
    rule cutadapt:
        input:
            file1 = __cutadapt__input[0],
        output:
            file1 = __cutadapt__output[0],
        params:
            fwd= cfgca.fwd,
            m= cfgca.m,
            quality= cfgca.quality,
            kwargs= cfgca.kwargs,
            mode = cfgca.mode,
        log: "logs/cutadapt.txt"
        run:
            executable = cfg.adapter_removal.tool # could be cutadapt or atropos
            cmd = "%s -o {output.file1} {input.file1}" % executable
            if params.fwd:
                cmd += "    -{params.mode} {params.fwd} " 
            cmd += " -m {params.m} -q {params.quality} "
            cmd += " {params.kwargs} > {log}"
            shell(cmd)
