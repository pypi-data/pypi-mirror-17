__digital_norm__output = ["digital_norm/%s_R1_.dn.fastq.gz" % cfg.PROJECT, 
                          "digital_norm/%s_R2_.dn.fastq.gz" % cfg.PROJECT]

rule digital_norm:
    input:
        fastq = __digital_norm__input
    output:
        fastq_dn = __digital_norm__output,
        graph = temp("digital_norm/%s_graph.ct" % cfg.PROJECT)
    params:
        project = "digital_norm/%s" % cfg.PROJECT,
        options = " ".join(["%s %s" % (key, config["digital_norm"]["options"][key]) 
                    for key in config["digital_norm"]["options"]])
    shell:
        """
        # concatenate R1 and R2
        interleave-reads.py {input.fastq} --output {params.project}.pe

        # digital norm
        normalize-by-median.py --paired {params.options} \
            --savegraph {output.graph} {params.project}.pe \
            --output {params.project}.pe.keep
        
        # filter abundance
        filter-abund.py -V {output.graph} {params.project}.pe.keep \
            --output {params.project}.pe.filter

        # extract paired reads
        extract-paired-reads.py {params.project}.pe.filter \
            --output-paired {params.project}.dn.pe \
            --output-single {params.project}.dn.se

        # split paired reads
        split-paired-reads.py {params.project}.dn.pe --gzip \
            -1 {output.fastq_dn[0]} -2 {output.fastq_dn[1]}
        """
