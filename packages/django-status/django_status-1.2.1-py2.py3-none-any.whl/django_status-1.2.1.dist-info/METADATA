Metadata-Version: 2.0
Name: django-status
Version: 1.2.1
Summary: Application that provides an API to check the status of some parts and some utilities like ping.
Home-page: https://github.com/PeRDy/django-status
Author: José Antonio Perdiguero López
Author-email: perdy.hh@gmail.com
License: Django Status is a application for Django projects that provides an API to check the status of some parts and some utilities like ping requests.
Requires-Dist: Django (>=1.8)
Requires-Dist: GitPython (>=1.0,<1.1)

Copyright (C) 2015 Jose Antonio Perdiguero Lopez

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

Download-URL: https://github.com/PeRDy/django-status
Description: =============
        Django Status
        =============
        
        :Version: 1.2.1
        :Status: Production/Stable
        :Author: José Antonio Perdiguero López
        
        Django Status is a application for Django projects that provides an API to check the status of some parts and some
        utilities like ping requests.
        
        Quick start
        ===========
        
        #. Install this package using pip::
        
            pip install django-status
        
        
        #. Add *PROJECT_PATH* to your django settings module.
        #. Add *status* to your **INSTALLED_APPS** settings like this::
        
            INSTALLED_APPS = (
                ...
                'status',
            )
        
        #. Add **Django-status** urls to your project urls::
        
            urlpatterns = [
                ...
                url(r'^status/', include('status.urls')),
            ]
        
        Check Providers
        ===============
        Django Status provides a mechanism to add new custom check functions through **check providers**. Each check provider
        will generate a new API method with an URL that uses the name of the provider. These functions must accept \*args and
        \*\*kwargs and will return a JSON-serializable object through json.dumps() method, for example a ping function::
        
            def ping(*args, **kwargs):
                return {'pong': True}
        
        By default **Django status** provides the follow checks:
        
        Ping
            A ping to application.
            URL: /api/ping
        
        Code
            Source code stats such as current active branch, last commit, if debug is active...
            URL: /api/code
        
        Databases
            Check if databases are running.
            URL: /api/databases
        
        Databases stats
            Show stats for all databases.
            URL: /api/databases/stats
        
        Caches
            Check if caches are running.
            URL: /api/caches
        
        Celery
            Check if celery workers defined in settings are running.
            URL: /api/celery
        
        Celery stats
            Show celery worker stats.
            URL: /api/celery/stats
        
        Settings
        ========
        STATUS_CHECK_PROVIDERS
        ----------------------
        List of additional check providers. Each provider consists in a tuple of name, function complete path, args and kwargs.
        Example::
        
            STATUS_CHECK_PROVIDERS = (
                ('test', 'application.module.test_function', [1, 2], {'foo': 'bar'}),
            )
        
        Default::
        
            STATUS_CHECK_PROVIDERS = (
                ('ping', 'status.check_providers.ping', None, None),
                ('code', 'status.check_providers.code', None, None),
                ('databases', 'status.check_providers.databases', None, None),
                ('databases/stats', 'status.check_providers.databases_stats', None, None),
                ('caches', 'status.check_providers.caches', None, None),
            )
        
        STATUS_CELERY_WORKERS
        ---------------------
        List of hostname from celery workers to be checked.
        Default::
        
            STATUS_CELERY_WORKERS = ()
        
        
        Changes
        =======
        v1.2.0 - 17/05/2016
         * Add root view for status api.
         * Use BASE_DIR instead of PROJECT_PATH to discover source code repo.+
         * Change default checks to be able to override.
        
        v1.1.2 - 8/04/2016
         * Add source code stats.
        
        v1.0.5 - 20/01/2016
         * Fix setup.py problems with requirements file.
        
        v1.0.4 - 14/12/2015
         * Fix setup.py problems with utf-8 files.
        
        v1.0.3 - 14/10/2015
         * Fix checkers for celery and celery stats. Now displays if a worker isn't running.
        
        v1.0.2 - 14/10/2015
         * Update README and meta info.
        
        v1.0.0 - 14/10/2015
         * Database check.
         * Database stats.
         * Cache check.
         * Celery check.
         * Celery stats.
         * First stable version.
        
        v0.1.0 - 8/10/2015
         * Initial release.
        
Keywords: python,django,database,cache,celery,status,check
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
