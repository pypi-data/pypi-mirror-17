Metadata-Version: 1.1
Name: django-search-listview
Version: 0.1
Summary: Searchable and paginable ListView
Home-page: https://github.com/SchroterQuentin/Django-SearchableListView
Author: Quentin Schroter
Author-email: qschroter@gmail.com
License: PSF
Download-URL: https://github.com/SchroterQuentin/Django-SearchableListView/tarball/0.1
Description: Django-SearchableListView
        =========================
        
        [![Build Status](https://travis-ci.org/SchroterQuentin/Django-SearchableListView.svg?branch=master)](https://travis-ci.org/SchroterQuentin/Django-SearchableListView)
        [![Coverage Status](https://coveralls.io/repos/github/SchroterQuentin/Django-SearchableListView/badge.svg)](https://coveralls.io/github/SchroterQuentin/Django-SearchableListView)
        
        ListView which can be searchable, paginate and which don't lose query parameter and page number
        
        Installation
        ------------
        
        This library need jQuery ( and Bootstrap for the frond-end ) 
        To install it in your vitualenv on your django project
        
            pip install django_search_model
        
        
        Only paginate ListView
        ----------------------
        
            class ListDevicePaginate(SearchableListView):
                model = Device
                template_name = "tests/list.html"
                paginate_by = 10
                
        Paginate + Searchable ListView
        ------------------------------
        
            class ListDeviceSearchablePaginate(SearchableListView):
                model = Device
                template_name = "tests/list.html"
                paginate_by = 10
                searchable_fields = ["inventory_number", "model_device", "model_device__brand__provider",
                "model_device__brand__name"]
                specifications = {
                    "model_device__brand__name": "__icontains"
                }
        
        Put the parameter for the query in **searchable_fields** which will be use to filter the queryset. The specifications which be use in the same way.
        
        In the template
        ---------------
        
        - Where you want the pagination and the search box
        
                <div class="row">
                    {% include "django_search_model/search_and_page.html" %}
                </div>
        
        - In the footer
        
                <!--Need jQuery-->
                <script src="{% static 'js/django_search_model.js' %}"></script>
                <script>
                    start_search()
                </script> 
        
        
        
        
        Now you have a beautifull box with all the fields you need.
        
        ![Alt tag](/docs/search_box.png?raw=true "Search box")
        
Keywords: django,listView,search
Platform: UNKNOWN
