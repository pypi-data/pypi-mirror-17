Metadata-Version: 1.1
Name: humilis-kinesis-processor
Version: 0.7.7
Summary: Humilis kinesis stream processor plugin
Home-page: http://github.com/humilis/humilis-kinesis-processor
Author: Anatoly Bubenkov, FindHotel and others
Author-email: developers@innovativetravel.eu
License: MIT
Description: Kinesis event stream processor
        ===================================
        
        .. |Build Status| image:: https://travis-ci.org/humilis/humilis-kinesis-processor.svg?branch=master
           :target: https://travis-ci.org/humilis/humilis-kinesis-processor
        .. |PyPI| image:: https://img.shields.io/pypi/v/humilis-kinesis-processor.svg?style=flat
           :target: https://pypi.python.org/pypi/humilis-kinesis-processor
        
        |Build Status| |PyPI|
        
        A `humilis <https://github.com/humilis/humilis>`__ plugin to deploy a
        `Lambda <https://aws.amazon.com/documentation/lambda/>`__ function that
        maps events in a `Kinesis <https://aws.amazon.com/documentation/kinesis/>`__
        event stream using a list of Python callables.
        
        Installation
        ------------
        
        ::
        
            pip install humilis-kinesis-processor
        
        Development
        -----------
        
        Assuming you have
        `virtualenv <https://virtualenv.readthedocs.org/en/latest/>`__ installed:
        
        ::
        
            make develop
        
        Configure humilis:
        
        ::
        
            .env/bin/humilis configure --local
        
        Testing
        -------
        
        To run the local test suite:
        
        ::
        
            make test
        
        You can test the deployment of the Lambda function using:
        
        .. code:: bash
        
            make create
        
        The command above will also create additional resources (such as several
        Kinesis streams) needed to test that the deployment was successful. Once
        deployed you can run the integration test suite using:
        
        ::
        
            make testi
        
        Don't forget to delete the test deployment after you are done:
        
        .. code:: bash
        
            make delete
        
        More information
        ----------------
        
        See `humilis <https://github.com/humilis/humilis>`__ documentation.
        
        
        Contact
        -------
        
        If you have questions, bug reports, suggestions, etc. please create an issue on
        the `GitHub project page <http://github.com/humilis/humilis-kinesis-processor>`_.
        
        License
        -------
        
        This software is licensed under the `MIT license <http://en.wikipedia.org/wiki/MIT_License>`_
        
        See `License file <https://github.com/humilis/humilis-kinesis-processor/blob/master/LICENSE.txt>`_
        
        
        Â© 2016 Anatoly Bubenkov, `FindHotel <http://company.findhotel.net>`_ and others.
        
        Authors
        =======
        
        `Anatoly Bubenkov <bubenkoff@gmail.com>`_
            original idea and implementation
        
        These people have contributed to `humilis-kinesis-mapper`, in alphabetical order:
        
        * `German Gomez-Herrero <german.gomezherrero@gmail.com>`_
        
        Changelog
        =========
        
        0.7.7
        -----
        
        - Support for multiple delivery streams for input, error, and output(s)
        
        0.7.6
        -----
        
        - Support for one-to-many mappers
        
        0.7.5
        -----
        
        - Users can also specify input/output/error streams by name instead of as
          references to another layer outputs.
        
        0.6.8
        -----
        
        - Set environment variables for the humilis environment/layer/stage
        
        0.4.0
        -----
        
        - Major bugfix: permission to put records in delivery streams
        
        0.3.0
        -----
        
        - Major bugfix: give permission to write state to DynamodDB
        
        0.2.0
        -----
        
        - Package becomes a generic map-multiplex-map processor (germangh)
        
        0.1.1
        -----
        
        - Cleanup package data (bubenkoff)
        
        0.1.0
        -----
        
        - Major refactoring to simplify and clean the code (germangh)
        
        0.0.1
        -----
        
        - Initial release (bubenkoff)
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 2
